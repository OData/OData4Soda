<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Spatial</name>
  </assembly>
  <members>
    <member name="T:System.Spatial.BaseSpatialFactory">
      <summary>The base spatial factory.</summary>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.AddLine(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Draws a point in the specified coordinate.</summary>
      <param name="x">X or latitude coordinate</param>
      <param name="y">Y or longitude coordinate</param>
      <param name="z">Z coordinate</param>
      <param name="m">M coordinate</param>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.AddPos(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Adds a new position to the current line figure.</summary>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.BeginFigure">
      <summary>Begins drawing a figure.</summary>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.BeginGeo(System.Spatial.SpatialType)">
      <summary>Begins geo.</summary>
      <param name="type">The spatial type.</param>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.EndFigure">
      <summary>Ends the figure set on the current node.</summary>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.EndGeo">
      <summary>Ends the current spatial object.</summary>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.Finish">
      <summary>Finishes the current instance.</summary>
    </member>
    <member name="M:System.Spatial.BaseSpatialFactory.StartRing(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new polygon ring.</summary>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="T:System.Spatial.CoordinateSystem">
      <summary>Coordinates system reference.</summary>
    </member>
    <member name="F:System.Spatial.CoordinateSystem.DefaultGeographic">
      <summary>The default geographic reference (SRID 4326, WGS84).</summary>
    </member>
    <member name="F:System.Spatial.CoordinateSystem.DefaultGeometric">
      <summary>The default geometric reference.</summary>
    </member>
    <member name="M:System.Spatial.CoordinateSystem.Equals(System.Object)">
      <summary>Equals overload.</summary>
      <returns>Is true if equal.</returns>
      <param name="obj">The other coordinate system.</param>
    </member>
    <member name="M:System.Spatial.CoordinateSystem.Geographic(System.Nullable{System.Int32})">
      <summary>Gets or creates a geographic coordinate system with the ID, or the default if null is given. </summary>
      <returns>The coordinate system.</returns>
      <param name="id">The coordinate system ID. Null indicates the default should be returned.</param>
    </member>
    <member name="M:System.Spatial.CoordinateSystem.Geometric(System.Nullable{System.Int32})">
      <summary>Gets or creates a geometric coordinate system with the ID, or the default if null is given. </summary>
      <returns>The coordinate system.</returns>
      <param name="id">The coordinate system ID. Null indicates the default should be returned.</param>
    </member>
    <member name="M:System.Spatial.CoordinateSystem.GetHashCode">
      <summary>Gets the hash code.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:System.Spatial.CoordinateSystem.Id">
      <summary>The SRID.</summary>
      <returns>The SRID.</returns>
    </member>
    <member name="P:System.Spatial.CoordinateSystem.Name">
      <summary>The name of the reference.</summary>
      <returns>The name of the reference.</returns>
    </member>
    <member name="M:System.Spatial.CoordinateSystem.ToString">
      <summary>ToString.</summary>
      <returns>String representation in the form of SRID=#;</returns>
    </member>
    <member name="T:System.Spatial.FullGlobe">
      <summary>The full globe.</summary>
    </member>
    <member name="M:System.Spatial.FullGlobe.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.FullGlobe" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeographicCurve">
      <summary>The geographic curve.</summary>
    </member>
    <member name="M:System.Spatial.GeographicCurve.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicCurve" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeographicLineString">
      <summary>A geographic line string consisting of an array of geo points.</summary>
    </member>
    <member name="M:System.Spatial.GeographicLineString.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicLineString" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicLineString.Points">
      <summary>The point list.</summary>
      <returns>The point list.</returns>
    </member>
    <member name="T:System.Spatial.GeographicMultiLineString">
      <summary>The geographic multi-line string.</summary>
    </member>
    <member name="M:System.Spatial.GeographicMultiLineString.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicMultiLineString" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicMultiLineString.LineStrings">
      <summary>The line strings.</summary>
      <returns>The line strings.</returns>
    </member>
    <member name="T:System.Spatial.GeographicMultiPoint">
      <summary>The geographic multi-point.</summary>
    </member>
    <member name="M:System.Spatial.GeographicMultiPoint.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicMultiPoint" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicMultiPoint.Points">
      <summary>The points.</summary>
      <returns>The points.</returns>
    </member>
    <member name="T:System.Spatial.GeographicMultiPolygon">
      <summary>The geographic multi-polygon.</summary>
    </member>
    <member name="M:System.Spatial.GeographicMultiPolygon.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicMultiPolygon" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicMultiPolygon.Polygons">
      <summary>The polygons.</summary>
      <returns>The polygons.</returns>
    </member>
    <member name="T:System.Spatial.GeographicPoint">
      <summary>The geographic point.</summary>
    </member>
    <member name="M:System.Spatial.GeographicPoint.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicPoint" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicPoint.Latitude">
      <summary>The latitude.</summary>
      <returns>The latitude.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPoint.Longitude">
      <summary>The longitude.</summary>
      <returns>The longitude.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPoint.M">
      <summary>The nullable M.</summary>
      <returns>The nullable M.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPoint.Z">
      <summary>The nullable Z.</summary>
      <returns>The nullable Z.</returns>
    </member>
    <member name="T:System.Spatial.GeographicPolygon">
      <summary>The geographic polygon.</summary>
    </member>
    <member name="M:System.Spatial.GeographicPolygon.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicPolygon" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographicPolygon.Rings">
      <summary>The set of rings.</summary>
      <returns>The set of rings.</returns>
    </member>
    <member name="T:System.Spatial.GeographicPosition">
      <summary>Represents one position in the geographical coordinate system.</summary>
    </member>
    <member name="M:System.Spatial.GeographicPosition.#ctor(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicPosition" /> class.</summary>
      <param name="latitude">The latitude portion of a position.</param>
      <param name="longitude">The longitude portion of a position.</param>
      <param name="z">The altitude portion of a position.</param>
      <param name="m">The arbitrary measure associated with a position.</param>
    </member>
    <member name="M:System.Spatial.GeographicPosition.Equals(System.Object)">
      <summary>Performs equality comparison on an object.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="obj">other position</param>
    </member>
    <member name="M:System.Spatial.GeographicPosition.Equals(System.Spatial.GeographicPosition)">
      <summary>Performs equality comparison on a spatial geographic position.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="other">other position</param>
    </member>
    <member name="M:System.Spatial.GeographicPosition.GetHashCode">
      <summary>Computes a hash code.</summary>
      <returns>A hash code.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPosition.Latitude">
      <summary>The latitude portion of a position.</summary>
      <returns>The latitude portion of a position.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPosition.Longitude">
      <summary>The longitude portion of a position.</summary>
      <returns>The longitude portion of a position.</returns>
    </member>
    <member name="P:System.Spatial.GeographicPosition.M">
      <summary>The arbitrary measure associated with a position.</summary>
      <returns>The arbitrary measure associated with a position.</returns>
    </member>
    <member name="M:System.Spatial.GeographicPosition.op_Equality(System.Spatial.GeographicPosition,System.Spatial.GeographicPosition)">
      <summary>Performs equality comparison.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="left">The first position.</param>
      <param name="right">The second position.</param>
    </member>
    <member name="M:System.Spatial.GeographicPosition.op_Inequality(System.Spatial.GeographicPosition,System.Spatial.GeographicPosition)">
      <summary>Performs inequality comparison.</summary>
      <returns>Is true if left is not equal to right.</returns>
      <param name="left">The first position.</param>
      <param name="right">The other position.</param>
    </member>
    <member name="P:System.Spatial.GeographicPosition.Z">
      <summary>The altitude portion of a position.</summary>
      <returns>The altitude portion of a position.</returns>
    </member>
    <member name="T:System.Spatial.GeographicSurface">
      <summary>The geographic surface.</summary>
    </member>
    <member name="M:System.Spatial.GeographicSurface.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographicSurface" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.Geography">
      <summary>The base class of geographic shapes.</summary>
    </member>
    <member name="M:System.Spatial.Geography.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.Geography" /> class.</summary>
      <param name="coordinateSystem">The systemReference of this instance</param>
    </member>
    <member name="P:System.Spatial.Geography.CoordinateSystem">
      <summary>The SRID of this instance of geography.</summary>
      <returns>The SRID of this instance of geography.</returns>
    </member>
    <member name="M:System.Spatial.Geography.CopyFrom(System.Spatial.Geography)">
      <summary>The copy initializer.</summary>
      <param name="geography">The geography to copy.</param>
    </member>
    <member name="M:System.Spatial.Geography.Equals(System.Object)">
      <summary>Determines whether this instance and another specified geography instance have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="obj">The geography to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geography.Equals(System.Spatial.Geography)">
      <summary>Determines whether this instance and another specified geography instance have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="other">The geography to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geography.Equals(System.Spatial.SpatialEquality,System.Spatial.Geography)">
      <summary>Determines whether this instance and another specified geography instance have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
      <param name="other">The geography to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geography.Equals(System.Spatial.SpatialEquality,System.Spatial.Geography,System.Spatial.Geography)">
      <summary>Determines whether the given two geography instances have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
      <param name="left">The first geography instance.</param>
      <param name="right">The other geography instance to compare.</param>
    </member>
    <member name="M:System.Spatial.Geography.GetHashCode">
      <summary>Computes the hash code for this geography instance. </summary>
      <returns>The hash code for this geography instance.</returns>
    </member>
    <member name="M:System.Spatial.Geography.GetHashCode(System.Spatial.SpatialEquality)">
      <summary>Computes the hash code for this geography instance using the given spatial equality instance. </summary>
      <returns>The hash code for this geography instance.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
    </member>
    <member name="P:System.Spatial.Geography.IsEmpty">
      <summary>The is geography empty reference.</summary>
      <returns>Is geography empty.</returns>
    </member>
    <member name="M:System.Spatial.Geography.op_Equality(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>Determines whether the given two geography instances have the same value.  </summary>
      <returns>Is true if the value of left is the same as the value of right; otherwise, is false.</returns>
      <param name="left">The first geography instance.</param>
      <param name="right">The second geogrpahy instance.</param>
    </member>
    <member name="M:System.Spatial.Geography.op_Inequality(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>Determines whether the given two geography instances have different values. </summary>
      <returns>Is true if the value of left is different from the value of right; otherwise, is false.</returns>
      <param name="left">The first geography instance.</param>
      <param name="right">The second geography instance.</param>
    </member>
    <member name="M:System.Spatial.Geography.SendTo(System.Spatial.GeographyChain)">
      <summary>Sends the current spatial object to the given pipeline.</summary>
      <param name="chain">The spatial pipeline.</param>
    </member>
    <member name="T:System.Spatial.GeographyBuilder">
      <summary>The builder for geography types.</summary>
    </member>
    <member name="M:System.Spatial.GeographyBuilder.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographyBuilder" /> class.</summary>
    </member>
    <member name="P:System.Spatial.GeographyBuilder.ConstructedGeography">
      <summary>Gets the geography object that was constructed.</summary>
      <returns>The geography object that was constructed.</returns>
    </member>
    <member name="M:System.Spatial.GeographyBuilder.Create">
      <summary>Creates the implementation of the builder.</summary>
      <returns>The created geography builder implementation.</returns>
    </member>
    <member name="T:System.Spatial.GeographyChain">
      <summary>This is definition of the geography chain api.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographyChain" /> class.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.AddGeographicControlPoint(System.Spatial.GeographicPosition)">
      <summary>Draws a point in the specified coordinate.</summary>
      <param name="position">The next position.</param>
    </member>
    <member name="M:System.Spatial.GeographyChain.BeginFigure">
      <summary>Begins drawing a figure.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.BeginGeography(System.Spatial.SpatialType)">
      <summary>Begins drawing a spatial object.</summary>
      <param name="type">The spatial type of the object.</param>
    </member>
    <member name="M:System.Spatial.GeographyChain.EndFigure">
      <summary>Ends the current figure.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.EndGeography">
      <summary>Ends the current spatial object.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.Reset">
      <summary>Sets up the pipeline for reuse.</summary>
    </member>
    <member name="M:System.Spatial.GeographyChain.SetCoordinateSystem(System.Spatial.CoordinateSystem)">
      <summary>Sets the coordinate system.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeographyCollection">
      <summary>The geographic collection.</summary>
    </member>
    <member name="M:System.Spatial.GeographyCollection.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeographyCollection" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeographyCollection.Geography">
      <summary>The geographies reference.</summary>
    </member>
    <member name="T:System.Spatial.GeographyFactory">
      <summary>The geography factory.</summary>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Collection">
      <summary>Creates a geography collection.</summary>
      <returns>A geography collection factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Collection(System.Spatial.CoordinateSystem)">
      <summary>Creates a geography collection.</summary>
      <returns>A geography collection factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString">
      <summary>Creates an empty geographic line string.</summary>
      <returns>A geographic line string factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString(System.Double,System.Double)">
      <summary>Creates a geographic line string with a starting position.</summary>
      <returns>A geographic line string factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geographic line string with a starting position.</summary>
      <returns>A geographic line string factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString(System.Spatial.CoordinateSystem)">
      <summary>Creates an empty geographic line string.</summary>
      <returns>A geographic line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString(System.Spatial.CoordinateSystem,System.Double,System.Double)">
      <summary>Creates a geographic line string with a starting position.</summary>
      <returns>A geographic line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.LineString(System.Spatial.CoordinateSystem,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geographic line string with a starting position.</summary>
      <returns>A geographic line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiLineString">
      <summary>Creates a geographic multi-line string.</summary>
      <returns>A geographic multi-line string factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiLineString(System.Spatial.CoordinateSystem)">
      <summary>Creates a geographic multi-line string.</summary>
      <returns>A geographic multi-line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiPoint">
      <summary>Creates a geographic multipoint.</summary>
      <returns>A geographic multipoint factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiPoint(System.Spatial.CoordinateSystem)">
      <summary>Creates a geographic multipoint.</summary>
      <returns>A geographic multipoint factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiPolygon">
      <summary>Creates a geographic multipolygon.</summary>
      <returns>A geographic multipolygon factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.MultiPolygon(System.Spatial.CoordinateSystem)">
      <summary>Creates a geographic multipolygon.</summary>
      <returns>A geographic multipolygon factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point">
      <summary>Creates a factory with an empty geographic point.</summary>
      <returns>A geographic point factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point(System.Double,System.Double)">
      <summary>Creates a geographic point.</summary>
      <returns>A geographic point factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geographic point.</summary>
      <returns>A geographic point factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point(System.Spatial.CoordinateSystem)">
      <summary> Create a factory with an empty Geographic Point </summary>
      <returns>A geographic point factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point(System.Spatial.CoordinateSystem,System.Double,System.Double)">
      <summary>Creates a geographic point.</summary>
      <returns>A geographic point factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Point(System.Spatial.CoordinateSystem,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geographic point.</summary>
      <returns>A geographic point factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Polygon">
      <summary>Creates a geographic polygon.</summary>
      <returns>A geographic polygon factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory.Polygon(System.Spatial.CoordinateSystem)">
      <summary>Creates a geographic polygon.</summary>
      <returns>A geographic polygon factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeographyFactory`1">
      <summary>The spatial factory.</summary>
      <typeparam name="T">The target type.</typeparam>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.AddLine(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Draws a point in the specified coordinate.</summary>
      <param name="latitude">X or latitude coordinate.</param>
      <param name="longitude">Y or longitude coordinate.</param>
      <param name="z">Z coordinate.</param>
      <param name="m">M coordinate.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.BeginFigure">
      <summary>Begins drawing a figure.</summary>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.BeginGeo(System.Spatial.SpatialType)">
      <summary>Begins a spatial object.</summary>
      <param name="type">The spatial type.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Build">
      <summary>Finishes the current geography.</summary>
      <returns>Returns <see cref="{0}" />.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Collection">
      <summary>Starts a new collection.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.EndFigure">
      <summary>Ends the figure set on the current node.</summary>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.EndGeo">
      <summary>Ends the current spatial object.</summary>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.LineString">
      <summary> Start a new empty LineString </summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.LineString(System.Double,System.Double)">
      <summary>Starts a new line string.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude"> The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.LineString(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary> Start a new line string.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude</param>
      <param name="longitude">The longitude</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.LineTo(System.Double,System.Double)">
      <summary>Adds a new point in the current line figure.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.LineTo(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Adds a new point in the current line figure.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.MultiLineString">
      <summary>Starts a new multi-line string.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.MultiPoint">
      <summary>Starts a new multipoint.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.MultiPolygon">
      <summary>Starts a new multipolygon.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.op_Implicit(System.Spatial.GeographyFactory{`0})~`0">
      <returns>Returns <see cref="T:System.Spatial.GeographyFactory`1" />.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Point">
      <summary>Starts a new empty point.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Point(System.Double,System.Double)">
      <summary>Starts a new point.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Point(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new point.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Polygon">
      <summary>Starts a new polygon.</summary>
      <returns>The current instance of geography factory.</returns>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Ring(System.Double,System.Double)">
      <summary>Starts a new polygon ring.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeographyFactory`1.Ring(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new polygon ring.</summary>
      <returns>The current instance of geography factory.</returns>
      <param name="latitude">The latitude.</param>
      <param name="longitude">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="T:System.Spatial.GeographyOperationsExtensions">
      <summary>Extends methods for the geographic operations.</summary>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Area(System.Spatial.GeographicSurface)">
      <summary>The geographic area.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Boundary(System.Spatial.Geography)">
      <summary>The geographic boundary.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Buffer(System.Spatial.Geography,System.Double,System.Double)">
      <summary>The geographic buffer.</summary>
      <returns>The buffered geography.</returns>
      <param name="operand">The operand.</param>
      <param name="distance">The distance to buffer.</param>
      <param name="tolerance">The tolerance of the distance.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Centroid(System.Spatial.GeographicSurface)">
      <summary>The geographic centroid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Contains(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic contains.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.ConvexHull(System.Spatial.Geography)">
      <summary>The geographic convex hull.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Crosses(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic crosses.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Difference(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Distance(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic distance.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Envelope(System.Spatial.Geography)">
      <summary>The geographic envelope.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.GeographicEquals(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic equals.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.GetBounds(System.Spatial.Geography,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>The geographic get bounds.</summary>
      <param name="operand">The operand.</param>
      <param name="minX">The minimum X.</param>
      <param name="minY">The minimum Y.</param>
      <param name="maxX">The maximum X.</param>
      <param name="maxY">The maximum Y.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Intersection(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic intersection.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Intersects(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic intersects.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.IsSimple(System.Spatial.Geography)">
      <summary>The geographic is simple.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.IsValid(System.Spatial.Geography)">
      <summary>The geographic is valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Length(System.Spatial.GeographicCurve)">
      <summary>The geographic length.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.MakeValid(System.Spatial.Geography)">
      <summary>The geographic make valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Overlaps(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic overlaps.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.PointOnSurface(System.Spatial.GeographicSurface)">
      <summary>The geographic point on surface.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Reduce(System.Spatial.Geography,System.Double)">
      <summary>The geographic reduce.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
      <param name="tolerance">The tolerance of the operation.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.SymmetricDifference(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic symmetric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Touches(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic touches.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Union(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic union.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeographyOperationsExtensions.Within(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic within.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="T:System.Spatial.GeoJsonFormat">
      <summary>The object to move spatial types to and from the GeoJson format.</summary>
    </member>
    <member name="M:System.Spatial.GeoJsonFormat.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeoJsonFormat" /> class.</summary>
    </member>
    <member name="M:System.Spatial.GeoJsonFormat.Create">
      <summary>Creates the implementation of the format.</summary>
      <returns>Returns the created GeoJsonFormat implementation.</returns>
    </member>
    <member name="T:System.Spatial.GeometricCurve">
      <summary>The geometric curve.</summary>
    </member>
    <member name="M:System.Spatial.GeometricCurve.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricCurve" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricCurve.EndingPoint">
      <summary>The ending point.</summary>
    </member>
    <member name="P:System.Spatial.GeometricCurve.IsClosed">
      <summary>The is curve closed.</summary>
      <returns>Is curve closed.</returns>
    </member>
    <member name="P:System.Spatial.GeometricCurve.StartingPoint">
      <summary>The starting point.</summary>
      <returns>The starting point.</returns>
    </member>
    <member name="T:System.Spatial.GeometricLineString">
      <summary>The geometric line string.</summary>
    </member>
    <member name="M:System.Spatial.GeometricLineString.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricLineString" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricLineString.Points">
      <summary>The point list.</summary>
      <returns>The point list.</returns>
    </member>
    <member name="T:System.Spatial.GeometricMultiLineString">
      <summary>The geometric multi-line string.</summary>
    </member>
    <member name="M:System.Spatial.GeometricMultiLineString.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricMultiLineString" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricMultiLineString.LineStrings">
      <summary>The line strings.</summary>
      <returns>The line strings.</returns>
    </member>
    <member name="T:System.Spatial.GeometricMultiPoint">
      <summary>The geometric multipoint.</summary>
    </member>
    <member name="M:System.Spatial.GeometricMultiPoint.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricMultiPoint" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricMultiPoint.Points">
      <summary>The geometric multipoints.</summary>
      <returns>The geometric multipoints.</returns>
    </member>
    <member name="T:System.Spatial.GeometricMultiPolygon">
      <summary>The geometric multipolygon.</summary>
    </member>
    <member name="M:System.Spatial.GeometricMultiPolygon.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricMultiPolygon" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricMultiPolygon.Polygons">
      <summary>The geometric multpolygons.</summary>
      <returns>The geometric multpolygons.</returns>
    </member>
    <member name="T:System.Spatial.GeometricPoint">
      <summary>The geometric point.</summary>
    </member>
    <member name="M:System.Spatial.GeometricPoint.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricPoint" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricPoint.M">
      <summary>The nullable M.</summary>
      <returns>The nullable M.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPoint.X">
      <summary>The latitude.</summary>
      <returns>The latitude.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPoint.Y">
      <summary>The longitude.</summary>
      <returns>The longitude.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPoint.Z">
      <summary>The nullable Z.</summary>
      <returns>The nullable Z.</returns>
    </member>
    <member name="T:System.Spatial.GeometricPolygon">
      <summary>The geometric polygon.</summary>
    </member>
    <member name="M:System.Spatial.GeometricPolygon.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometricPolygon" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometricPolygon.Rings">
      <summary>The set of rings.</summary>
      <returns>The set of rings.</returns>
    </member>
    <member name="T:System.Spatial.GeometricPosition">
      <summary>Represents one position in the geometric coordinate system.</summary>
    </member>
    <member name="M:System.Spatial.GeometricPosition.#ctor(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geometric position from components.</summary>
      <param name="x">The x portion of a position.</param>
      <param name="y">The y portion of a position.</param>
      <param name="z">The altitude portion of a position.</param>
      <param name="m">The arbitrary measure associated with a position.</param>
    </member>
    <member name="M:System.Spatial.GeometricPosition.Equals(System.Object)">
      <summary>The equality comparison of an object.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="obj">The other position.</param>
    </member>
    <member name="M:System.Spatial.GeometricPosition.Equals(System.Spatial.GeometricPosition)">
      <summary>The equality comparison of two positions.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="other">The other position.</param>
    </member>
    <member name="M:System.Spatial.GeometricPosition.GetHashCode">
      <summary>Computes a hash code.</summary>
      <returns>A hash code.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPosition.M">
      <summary>The arbitrary measure associated with a position.</summary>
      <returns>The arbitrary measure associated with a position.</returns>
    </member>
    <member name="M:System.Spatial.GeometricPosition.op_Equality(System.Spatial.GeometricPosition,System.Spatial.GeometricPosition)">
      <summary>The equality comparison of two positions.</summary>
      <returns>Is true if each pair of coordinates is equal.</returns>
      <param name="left">The first position.</param>
      <param name="right">The second position.</param>
    </member>
    <member name="M:System.Spatial.GeometricPosition.op_Inequality(System.Spatial.GeometricPosition,System.Spatial.GeometricPosition)">
      <summary>The Inequality comparison of two positions.</summary>
      <returns>Is true if left is not equal to right.</returns>
      <param name="left">The first position.</param>
      <param name="right">The other position.</param>
    </member>
    <member name="P:System.Spatial.GeometricPosition.X">
      <summary>The x portion of a position.</summary>
      <returns>The x portion of a position.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPosition.Y">
      <summary>The y portion of a position.</summary>
      <returns>The y portion of a position.</returns>
    </member>
    <member name="P:System.Spatial.GeometricPosition.Z">
      <summary>The altitude portion of a position.</summary>
      <returns>The altitude portion of a position.</returns>
    </member>
    <member name="T:System.Spatial.GeometricSurface">
      <summary>Represents a geometric surface.</summary>
    </member>
    <member name="T:System.Spatial.Geometry">
      <summary>The base class of geographic shapes.</summary>
    </member>
    <member name="M:System.Spatial.Geometry.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.Geometry" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.Geometry.CoordinateSystem">
      <summary>The SRID of this instance of geometry.</summary>
      <returns>The SRID of this instance of geometry.</returns>
    </member>
    <member name="M:System.Spatial.Geometry.CopyFrom(System.Spatial.Geometry)">
      <summary>The copy initializer.</summary>
      <param name="geometry">The geometry to copy.</param>
    </member>
    <member name="M:System.Spatial.Geometry.Equals(System.Object)">
      <summary>Determines whether this instance and another specified geometry instance have the same value. </summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="obj">The geometry to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geometry.Equals(System.Spatial.Geometry)">
      <summary>Determines whether this instance and another specified geometry instance have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="other">The geometry to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geometry.Equals(System.Spatial.SpatialEquality,System.Spatial.Geometry)">
      <summary>Determines whether this instance and another specified geometry instance have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
      <param name="other">The geometry to compare to this instance.</param>
    </member>
    <member name="M:System.Spatial.Geometry.Equals(System.Spatial.SpatialEquality,System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>Determines whether the given two geometry instances have the same value.</summary>
      <returns>Is true if the value of the value parameter is the same as this instance; otherwise, is false.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
      <param name="left">The first geometry instance.</param>
      <param name="right">The other geometry instance to compare.</param>
    </member>
    <member name="M:System.Spatial.Geometry.GetHashCode">
      <summary>Computes the hash code for this geometry instance.</summary>
      <returns>The hashcode for this geometry instance.</returns>
    </member>
    <member name="M:System.Spatial.Geometry.GetHashCode(System.Spatial.SpatialEquality)">
      <summary>Computes the hash code for this geometry instance using the given spatial equality instance.</summary>
      <returns>The hash code for this geometry instance.</returns>
      <param name="comparison">The spatial equality instance to use.</param>
    </member>
    <member name="P:System.Spatial.Geometry.IsEmpty">
      <summary>The is geometry empty.</summary>
      <returns>Is geometry empty.</returns>
    </member>
    <member name="M:System.Spatial.Geometry.op_Equality(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>Determines whether the given two geometry instances have the same value.</summary>
      <returns>Is true if the value of left is the same as the value of right; otherwise, is false.</returns>
      <param name="left">The first geometry instance.</param>
      <param name="right">The second geometry instance.</param>
    </member>
    <member name="M:System.Spatial.Geometry.op_Inequality(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>Determines whether the given two geometry instances have different values. </summary>
      <returns>Is true if the value of left is different from the value of right; otherwise, is false.</returns>
      <param name="left">The first geometry instance.</param>
      <param name="right">The second geometry instance.</param>
    </member>
    <member name="M:System.Spatial.Geometry.SendTo(System.Spatial.GeometryChain)">
      <summary>Sends the current spatial object to the given pipeline.</summary>
      <param name="chain">The spatial pipeline.</param>
    </member>
    <member name="T:System.Spatial.GeometryBuilder">
      <summary>The builder for geometry types.</summary>
    </member>
    <member name="M:System.Spatial.GeometryBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.GeometryBuilder" /> class.</summary>
    </member>
    <member name="P:System.Spatial.GeometryBuilder.ConstructedGeometry">
      <summary>Gets the geometry object that was constructed.</summary>
      <returns>The geometry object that was constructed.</returns>
    </member>
    <member name="M:System.Spatial.GeometryBuilder.Create">
      <summary>Creates the implementation of the builder.</summary>
      <returns>Returns the created geometry builder implementation.</returns>
    </member>
    <member name="T:System.Spatial.GeometryChain">
      <summary>This is the definition of the geometry chain api.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.GeometryChain" /> class.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.AddGeometricControlPoint(System.Spatial.GeometricPosition)">
      <summary>Draws a point in the specified coordinate.</summary>
      <param name="position">The next position.</param>
    </member>
    <member name="M:System.Spatial.GeometryChain.BeginFigure">
      <summary>Begins drawing a figure.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.BeginGeometry(System.Spatial.SpatialType)">
      <summary>Begins drawing a spatial object.</summary>
      <param name="type">The spatial type of the object.</param>
    </member>
    <member name="M:System.Spatial.GeometryChain.EndFigure">
      <summary>Ends the current figure.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.EndGeometry">
      <summary>Ends the current spatial object.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.Reset">
      <summary>Sets up the pipeline for reuse.</summary>
    </member>
    <member name="M:System.Spatial.GeometryChain.SetCoordinateSystem(System.Spatial.CoordinateSystem)">
      <summary>Sets the coordinate system.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeometryCollection">
      <summary>The geometry collection.</summary>
    </member>
    <member name="M:System.Spatial.GeometryCollection.#ctor(System.Spatial.CoordinateSystem)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.GeometryCollection" /> class.</summary>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="P:System.Spatial.GeometryCollection.Geometry">
      <summary>Returns the geometry instances in this collection. </summary>
      <returns>The geometry instances in this collection.</returns>
    </member>
    <member name="T:System.Spatial.GeometryFactory">
      <summary>The geometry factory.</summary>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Collection">
      <summary>Creates a geometric collection.</summary>
      <returns>A geometric collection factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Collection(System.Spatial.CoordinateSystem)">
      <summary>Creates a geometric collection.</summary>
      <returns>A geometric collection factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString">
      <summary>Creates an empty geometric line string.</summary>
      <returns>A geometric line string factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString(System.Double,System.Double)">
      <summary>Creates a geometric line string with a starting position.</summary>
      <returns>A geometric line string factory.</returns>
      <param name="x">X</param>
      <param name="y">Y</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geometric line string with a starting position.</summary>
      <returns>A geometric line string factory.</returns>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString(System.Spatial.CoordinateSystem)">
      <summary>Creates an empty geometric line string.</summary>
      <returns>A geometric line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString(System.Spatial.CoordinateSystem,System.Double,System.Double)">
      <summary>Creates a geometric line string with a starting position.</summary>
      <returns>A geometric line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
      <param name="x">X</param>
      <param name="y">Y</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.LineString(System.Spatial.CoordinateSystem,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geometric line string with a starting position.</summary>
      <returns>A geometric line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiLineString">
      <summary>Creates a geometric multi-line string.</summary>
      <returns>A geometric multi-line string factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiLineString(System.Spatial.CoordinateSystem)">
      <summary>Creates a geometric multi-line string.</summary>
      <returns>A geometric multi-line string factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiPoint">
      <summary>Creates a geometric multipoint.</summary>
      <returns>A geometric multipoint factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiPoint(System.Spatial.CoordinateSystem)">
      <summary>Creates a geometric multipoint.</summary>
      <returns>A geometric multipoint factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiPolygon">
      <summary>Creates a geometric multipolygon.</summary>
      <returns>A geometric multipolygon factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.MultiPolygon(System.Spatial.CoordinateSystem)">
      <summary>Creates a geometric multipolygon.</summary>
      <returns>A geometric multipolygon factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point">
      <summary>Creates a factory with an empty geometric point.</summary>
      <returns>A geometric point factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point(System.Double,System.Double)">
      <summary>Creates a geometric point.</summary>
      <returns>A geometric point factory.</returns>
      <param name="x">X</param>
      <param name="y">Y</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geometric point.</summary>
      <returns>A geometric point factory.</returns>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point(System.Spatial.CoordinateSystem)">
      <summary>Creates a factory with an empty geometric point.</summary>
      <returns>A geometric point factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point(System.Spatial.CoordinateSystem,System.Double,System.Double)">
      <summary>Creates a geometric point.</summary>
      <returns>A geometric point factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
      <param name="x">X</param>
      <param name="y">Y</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Point(System.Spatial.CoordinateSystem,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Creates a geometric point.</summary>
      <returns>A geometric point factory.</returns>
      <param name="coordinateSystem">The coordinate system</param>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Polygon">
      <summary>Creates a geometric polygon.</summary>
      <returns>A geometric polygon factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory.Polygon(System.Spatial.CoordinateSystem)">
      <summary>Creates a geometric polygon.</summary>
      <returns>A geometric polygon factory.</returns>
      <param name="coordinateSystem">The coordinate system.</param>
    </member>
    <member name="T:System.Spatial.GeometryFactory`1">
      <summary>The spatial factory.</summary>
      <typeparam name="T">The target type.</typeparam>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.AddLine(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Draws a point in the specified coordinate.</summary>
      <param name="x">X or latitude coordinate.</param>
      <param name="y">Y or longitude coordinate.</param>
      <param name="z">Z coordinate</param>
      <param name="m">M coordinate</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.BeginFigure">
      <summary>Begins drawing a figure.</summary>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.BeginGeo(System.Spatial.SpatialType)">
      <summary>Begins a spatial object.</summary>
      <param name="type">The spatial type.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Build">
      <summary>Finishes the current geometry.</summary>
      <returns>Returns <see cref="{0}" />.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Collection">
      <summary>Starts a new collection.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.EndFigure">
      <summary>Ends the figure set on the current node.</summary>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.EndGeo">
      <summary>Ends the current spatial object.</summary>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.LineString">
      <summary>Starts a new empty line string.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.LineString(System.Double,System.Double)">
      <summary>Starts a new line string.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.LineString(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new line string.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.LineTo(System.Double,System.Double)">
      <summary>Adds a new point in the current line figure.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.LineTo(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Adds a new point in the current line figure.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.MultiLineString">
      <summary>Starts a new multi-line string.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.MultiPoint">
      <summary>Starts a new multipoint.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.MultiPolygon">
      <summary>Starts a new multipolygon.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.op_Implicit(System.Spatial.GeometryFactory{`0})~`0">
      <returns>Returns <see cref="T:System.Spatial.GeometryFactory`1" />.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Point">
      <summary>Starts a new empty point.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Point(System.Double,System.Double)">
      <summary>Starts a new point.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Point(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new point.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Polygon">
      <summary>Starts a new polygon.</summary>
      <returns>The current instance of geometry factory.</returns>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Ring(System.Double,System.Double)">
      <summary>Starts a new polygon ring.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
    </member>
    <member name="M:System.Spatial.GeometryFactory`1.Ring(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Starts a new polygon ring.</summary>
      <returns>The current instance of geometry factory.</returns>
      <param name="x">The latitude.</param>
      <param name="y">The longitude.</param>
      <param name="z">Z</param>
      <param name="m">M</param>
    </member>
    <member name="T:System.Spatial.GeometryOperationsExtensions">
      <summary>The extension methods for the geographic operations.</summary>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Area(System.Spatial.GeometricSurface)">
      <summary>The geometric area.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Boundary(System.Spatial.Geometry)">
      <summary>The geometric boundary.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Buffer(System.Spatial.Geometry,System.Double,System.Double)">
      <summary>The geometric buffer.</summary>
      <returns>buffered geometry.</returns>
      <param name="operand">The operand.</param>
      <param name="distance">The distance to buffer.</param>
      <param name="tolerance">The tolerance of the distance.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Centroid(System.Spatial.GeometricSurface)">
      <summary>The geometric centroid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Contains(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric contains.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.ConvexHull(System.Spatial.Geometry)">
      <summary>The geometric convex hull.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Crosses(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric crosses.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Difference(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Distance(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric distance.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Envelope(System.Spatial.Geometry)">
      <summary>The geometric envelope.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.GeometricEquals(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric equals.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.GetBounds(System.Spatial.Geometry,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>The geometric get bounds.</summary>
      <param name="operand">The operand.</param>
      <param name="minX">The minimum X.</param>
      <param name="minY">The minimum Y.</param>
      <param name="maxX">The maximum X.</param>
      <param name="maxY">The maximum Y.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Intersection(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric intersection.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Intersects(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric intersects.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.IsSimple(System.Spatial.Geometry)">
      <summary>The geometric is simple.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.IsValid(System.Spatial.Geometry)">
      <summary>The geometric is valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Length(System.Spatial.GeometricCurve)">
      <summary>The geometric length.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.MakeValid(System.Spatial.Geometry)">
      <summary>The geometric make valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Overlaps(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric overlaps.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.PointOnSurface(System.Spatial.GeometricSurface)">
      <summary>The geometric point on surface.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Reduce(System.Spatial.Geometry,System.Double)">
      <summary>The geometric reduce.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
      <param name="tolerance">The tolerance of the operation.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.SymmetricDifference(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric symmetric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Touches(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric touches.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Union(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric union.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.GeometryOperationsExtensions.Within(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric within.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="T:System.Spatial.GmlFormat">
      <summary>The object to move spatial types to and from the GML format.</summary>
    </member>
    <member name="M:System.Spatial.GmlFormat.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.GmlFormat" /> class.</summary>
    </member>
    <member name="M:System.Spatial.GmlFormat.Create">
      <summary>Creates the implementation of the format.</summary>
      <returns>Returns the created GmlFormat implementation.</returns>
    </member>
    <member name="T:System.Spatial.IGeographyProvider">
      <summary>Provides access to the constructed geography.</summary>
    </member>
    <member name="P:System.Spatial.IGeographyProvider.ConstructedGeography">
      <summary>Gets the geography object that was constructed.</summary>
    </member>
    <member name="T:System.Spatial.IGeometryProvider">
      <summary>Provides access to the constructed geometry.</summary>
    </member>
    <member name="P:System.Spatial.IGeometryProvider.ConstructedGeometry">
      <summary>Gets the geometry object that was constructed.</summary>
    </member>
    <member name="T:System.Spatial.IShapeProvider">
      <summary>Provides access to the constructed geography or geometry.</summary>
    </member>
    <member name="T:System.Spatial.ISpatial">
      <summary>The spatial interface.</summary>
    </member>
    <member name="P:System.Spatial.ISpatial.CoordinateSystem">
      <summary>The coordinate system.</summary>
    </member>
    <member name="P:System.Spatial.ISpatial.IsEmpty">
      <summary>The is spatial type empty.</summary>
    </member>
    <member name="T:System.Spatial.ParseErrorException">
      <summary>The exception thrown on an unsuccessful parsing of the serialized format. </summary>
    </member>
    <member name="M:System.Spatial.ParseErrorException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.ParseErrorException" /><see cref="T:System.Spatial.ParseErrorException" /> class.</summary>
    </member>
    <member name="M:System.Spatial.ParseErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.ParseErrorException" /> class.</summary>
      <param name="info">The instance that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The instance that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Spatial.ParseErrorException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.ParseErrorException" /> class.</summary>
      <param name="message">The message about the exception.</param>
    </member>
    <member name="M:System.Spatial.ParseErrorException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Spatial.ParseErrorException" /> class.</summary>
      <param name="message">The message about the exception.</param>
      <param name="innerException">The exception that preceded this one.</param>
    </member>
    <member name="T:System.Spatial.SpatialChain">
      <summary>One link of a geospatial chain.</summary>
    </member>
    <member name="M:System.Spatial.SpatialChain.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Spatial.SpatialChain" /> class. </summary>
    </member>
    <member name="M:System.Spatial.SpatialChain.#ctor(System.Spatial.GeographyChain,System.Spatial.GeometryChain)">
      <summary> Initializes a new instance of the <see cref="T:System.Spatial.SpatialChain" /> class. </summary>
      <param name="geographyChain">The geography chain.</param>
      <param name="geometryChain">The geometry chain.</param>
    </member>
    <member name="M:System.Spatial.SpatialChain.ChainTo(System.Spatial.SpatialChain)">
      <summary>Adds the next pipeline.</summary>
      <returns>The last pipe segment in the chain, usually the one just created.</returns>
      <param name="destination">The next pipeline.</param>
    </member>
    <member name="P:System.Spatial.SpatialChain.GeographyChain">
      <summary>Gets the geography.</summary>
    </member>
    <member name="P:System.Spatial.SpatialChain.GeometryChain">
      <summary>Gets the geometry.</summary>
    </member>
    <member name="M:System.Spatial.SpatialChain.op_Implicit(System.Spatial.SpatialChain)~System.Spatial.GeographyChain">
      <summary>The spatial geography chain.</summary>
      <returns>Returns <see cref="T:System.Spatial.GeographyChain" />.</returns>
    </member>
    <member name="M:System.Spatial.SpatialChain.op_Implicit(System.Spatial.SpatialChain)~System.Spatial.GeometryChain">
      <summary>The spatial geometry chain.</summary>
      <returns>Returns <see cref="T:System.Spatial.GeometryChain" />.</returns>
    </member>
    <member name="P:System.Spatial.SpatialChain.StartingLink">
      <summary>Gets or sets the starting link. </summary>
      <returns>The starting link. </returns>
    </member>
    <member name="T:System.Spatial.SpatialEquality">
      <summary>Abstract class so that we can add items later to support new spatial types. </summary>
    </member>
    <member name="M:System.Spatial.SpatialEquality.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.SpatialEquality" /> class.</summary>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.FullGlobe,System.Spatial.FullGlobe)">
      <summary>Determines if the given two instances of full globe are equal. </summary>
      <returns>Is true if the two full globe instances are equal, otherwise returns false.</returns>
      <param name="left">The first full globe instance.</param>
      <param name="right">The second full globe instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicLineString,System.Spatial.GeographicLineString)">
      <summary>Determines if the given two instances of geographic line string are equal. </summary>
      <returns>Is true if the two geographic line string instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic line string instance.</param>
      <param name="right">The second geographic line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicMultiLineString,System.Spatial.GeographicMultiLineString)">
      <summary>Determines if the given two instances of geographic multi-line string are equal. </summary>
      <returns>Is true if the two geographic multi-line string instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic multi-line string instance.</param>
      <param name="right">The second geographic multi-line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicMultiPoint,System.Spatial.GeographicMultiPoint)">
      <summary>Determines if the given two instances of geographic multipoint are equal. </summary>
      <returns>Is true if the two geographic multipoint instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic multipoint instance.</param>
      <param name="right">The second geographic multipoint instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicMultiPolygon,System.Spatial.GeographicMultiPolygon)">
      <summary>Determines if the given two instances of geographic multipolygon are equal. </summary>
      <returns>Is true if the two geographic multipolygon instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic multipolygon instance.</param>
      <param name="right">The second geographic multipolygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicPoint,System.Spatial.GeographicPoint)">
      <summary> Determines if the given two instances of geographic point are equal. </summary>
      <returns>Is true if the two geographic point instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic point instance.</param>
      <param name="right">The second geographic point instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographicPolygon,System.Spatial.GeographicPolygon)">
      <summary> Determines if the given two instances of geographic polygon are equal. </summary>
      <returns>Is true if the two geographic polygon instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic polygon instance.</param>
      <param name="right">The second geographic polygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeographyCollection,System.Spatial.GeographyCollection)">
      <summary>Determines if the given two instances of geographic collection are equal. </summary>
      <returns>Is true if the two geographic collection instances are equal, otherwise returns false.</returns>
      <param name="left">The first geographic collection instance.</param>
      <param name="right">The second geographic collection instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricLineString,System.Spatial.GeometricLineString)">
      <summary>Determines if the given two instances of geometric line string are equal. </summary>
      <returns>Is true if the two geometric line string instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric line string instance.</param>
      <param name="right">The second geometric line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricMultiLineString,System.Spatial.GeometricMultiLineString)">
      <summary>Determines if the given two instances of geometric multi-line string are equal. </summary>
      <returns>Is true if the two geometric multi-line string instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric multi-line string instance.</param>
      <param name="right">The second geometric multi-line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricMultiPoint,System.Spatial.GeometricMultiPoint)">
      <summary>Determines if the given two instances of geometric multipoint are equal. </summary>
      <returns>Is true if the two geometric multipoint instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric multipoint instance.</param>
      <param name="right">The second geometric multipoint instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricMultiPolygon,System.Spatial.GeometricMultiPolygon)">
      <summary>Determines if the given two instances of geometric multipolygon are equal. </summary>
      <returns>Is true if the two geometric multipolygon instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric multipolygon instance.</param>
      <param name="right">The second geometric multipolygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricPoint,System.Spatial.GeometricPoint)">
      <summary>Determines if the given two instances of geometric point are equal. </summary>
      <returns>Is true if the two geometric point instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric point instance.</param>
      <param name="right">The second geometric point instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometricPolygon,System.Spatial.GeometricPolygon)">
      <summary>Determines if the given two instances of geometric polygon are equal. </summary>
      <returns>Is true if the two geometric polygon instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric polygon instance.</param>
      <param name="right">The second geometric polygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.Equals(System.Spatial.GeometryCollection,System.Spatial.GeometryCollection)">
      <summary>Determines if the given two instances of geometric collection are equal. </summary>
      <returns>Is true if the two geometric collection instances are equal, otherwise returns false.</returns>
      <param name="left">The first geometric collection instance.</param>
      <param name="right">The second geometric collection instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.FullGlobe)">
      <summary>Computes the hash code for the given full globe instance.</summary>
      <returns>The hash code for the given full globe instance.</returns>
      <param name="obj">The full globe instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicLineString)">
      <summary>Computes the hash code for the given geographic line string instance. </summary>
      <returns>The hash code for the given geographic line string instance.</returns>
      <param name="obj">The geographic line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicMultiLineString)">
      <summary>Computes the hash code for the given geographic multi-line string instance. </summary>
      <returns>The hash code for the given geographic multi-line string instance.</returns>
      <param name="obj">The geographic multi-line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicMultiPoint)">
      <summary>Computes the hash code for the given geographic multipoint instance. </summary>
      <returns>The hash code for the given geographic multipoint instance.</returns>
      <param name="obj">The given geographic multipoint instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicMultiPolygon)">
      <summary>Computes the hash code for the given geographic multipolygon instance. </summary>
      <returns>The hash code for the given geographic multipolygon instance.</returns>
      <param name="obj">The geographic multipolygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicPoint)">
      <summary>Computes the hash code for the given geographic point instance. </summary>
      <returns>The hash code for the given geographic point instance.</returns>
      <param name="obj">The geographic point instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographicPolygon)">
      <summary>Computes the hash code for the given geographic polygon instance. </summary>
      <returns>The hash code for the given geographic polygon instance.</returns>
      <param name="obj">The geographic polygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeographyCollection)">
      <summary>Computes the hash code for the given geographic collection instance. </summary>
      <returns>The hash code for the given geographic collection instance.</returns>
      <param name="obj">The geographic collection instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricLineString)">
      <summary>Computes the hash code for the given geometric line string instance. </summary>
      <returns>The hash code for the given geometric line string instance.</returns>
      <param name="obj">The geometric line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricMultiLineString)">
      <summary>Computes the hash code for the given geometric multi-line string instance. </summary>
      <returns>The hash code for the given geometric multi-line string instance.</returns>
      <param name="obj">The geometric multi-line string instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricMultiPoint)">
      <summary>Computes the hash code for the given geometric multipoint instance. </summary>
      <returns>The hash code for the given geometric multipoint instance.</returns>
      <param name="obj">The geometric multipoint instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricMultiPolygon)">
      <summary>Computes the hash code for the given geometric multipolygon instance. </summary>
      <returns>The hash code for the given geometric multipolygon instance.</returns>
      <param name="obj">The geometric multipolygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricPoint)">
      <summary>Computes the hash code for the given geometric point instance. </summary>
      <returns>The hash code for the given geometric point instance.</returns>
      <param name="obj">The geometric point instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometricPolygon)">
      <summary>Computes the hash code for the given geometric polygon instance. </summary>
      <returns>The hash code for the given geometric polygon instance.</returns>
      <param name="obj">The geometric polygon instance.</param>
    </member>
    <member name="M:System.Spatial.SpatialEquality.GetHashCode(System.Spatial.GeometryCollection)">
      <summary>Computes the hash code for the given geometric collection instance. </summary>
      <returns>The hash code for the given geometric collection instance.</returns>
      <param name="obj">The geometric collection instance.</param>
    </member>
    <member name="T:System.Spatial.SpatialFormat`3">
      <summary>The base class for all spatial formats.</summary>
      <typeparam name="TParseParameter">The type of reader to be read from.</typeparam>
      <typeparam name="TFormatReturn">The type of reader to be read from.</typeparam>
      <typeparam name="TWriterTarget">The type of reader to be read from.</typeparam>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.SpatialFormat`3" /> class. </summary>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.SpatialFormat`3" /> class. </summary>
      <param name="hasZ">if set to true [has Z].</param>
      <param name="hasM">if set to true [has M].</param>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.ClearWriterTarget(`2)">
      <summary>Clears the writer target in preparation for the next write. </summary>
      <param name="target">The writer target that was written to.</param>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.CreateParser">
      <summary>Creates a parser capable of pulling from the reader and producing to the shape provider.</summary>
      <returns>The parser that was created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.CreateReader(System.Spatial.SpatialChain)">
      <summary>Allows the subclass to create the reader.</summary>
      <returns>The reader that was created.</returns>
      <param name="destination">The place to produce the object.</param>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.CreateWriter(`2)">
      <summary>Creates the writer. </summary>
      <returns>The writer that was created.</returns>
      <param name="target">The target.</param>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.CreateWriterTarget">
      <summary>Allows the subclass to create the target that the writer writes to.</summary>
      <returns>Returns <see cref="T:System.Spatial.SpatialChain" />.</returns>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.ExtractFormatFromWriterTarget(`2)">
      <summary>Gets the written format of the correct type from the writer. </summary>
      <returns>Returns <see cref="T:System.Spatial.SpatialChain" />.</returns>
      <param name="target">The writer target that was written to.</param>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.Format``1(``0)">
      <summary>Creates a valid format from the spatial object. </summary>
      <returns>Returns <see cref="T:System.Spatial.SpatialChain" />.</returns>
      <param name="input">The object that the format is being created for.</param>
      <typeparam name="T">The type of object the format is being created for.</typeparam>
    </member>
    <member name="P:System.Spatial.SpatialFormat`3.HasM">
      <summary>Gets a value indicating whether this instance should read/write M. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="P:System.Spatial.SpatialFormat`3.HasZ">
      <summary>Gets a value indicating whether this instance should read/write Z. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.MakeValidatingBuilder">
      <summary>Creates the builder that will be called by the parser to build the new type. </summary>
      <returns>The builder that was created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.Parse``1(`0)">
      <summary>Parses the input and produces the object.</summary>
      <returns>Returns <see cref="T:System.Spatial.Transform`2" />.</returns>
      <param name="input">The input to be parsed.</param>
      <typeparam name="TResult">The type of object to produce.</typeparam>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.Reset">
      <summary>Resets the format and underlying objects to the starting state use in case of exception.</summary>
    </member>
    <member name="M:System.Spatial.SpatialFormat`3.TryParse``1(`0,``0@,System.String@)">
      <summary>Tries to parse the input without getting an exception. </summary>
      <returns>True if the parse was successful, and false otherwise.</returns>
      <param name="input">The input to be parsed.</param>
      <param name="result">If the return is true, this will have the object that was produced.</param>
      <param name="errorMessage">If the return is false, this will contain the error message.</param>
      <typeparam name="TResult">The type of object to produce.</typeparam>
    </member>
    <member name="T:System.Spatial.SpatialImplementation">
      <summary>The class responsible for knowing how to create the geography and geometry builders for a particular implementation of spatial types.</summary>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.SpatialImplementation" /> class.</summary>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateGeographyBuilder">
      <summary>Creates a geography builder for this implementation.</summary>
      <returns>The geography builder created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateGeoJsonFormat">
      <summary>Creates a geo Json format for this implementation.</summary>
      <returns>The geo Json format created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateGeometryBuilder">
      <summary>Creates a geometry builder for this implementation.</summary>
      <returns>The geometry builder created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateGmlFormat">
      <summary>Creates a Gml format for this implementation.</summary>
      <returns>The Gml format created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateRepresentationEquality">
      <summary>Creates a spatial equality instance for doing representation equality. </summary>
      <returns>The spatial equality instance created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateValidator">
      <summary>Creates a spatial validator.</summary>
      <returns>The spatial validator created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateWellKnownBinaryFormat">
      <summary>Creates a well-known binary format for this implementation.</summary>
      <returns>The well-known binary format created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateWellKnownBinaryFormat(System.Boolean,System.Boolean)">
      <summary>Creates a well-known binary format for this implementation.</summary>
      <returns>The well-known binary format created.</returns>
      <param name="hasZ">Controls the writing of the Z dimension.</param>
      <param name="hasM">Controls the writing of the M dimension.</param>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.CreateWellKnownTextSqlFormat">
      <summary>Creates a well-known text sql format for this implementation.</summary>
      <returns>The well-known text sql format created.</returns>
    </member>
    <member name="M:System.Spatial.SpatialImplementation.Register(System.Double,System.Spatial.SpatialImplementation)">
      <summary>Used to register an implementation to be used.</summary>
      <returns>A disposable that removes the implementation when disposed.</returns>
      <param name="priority">The priority of the implementation being registered.</param>
      <param name="implementation">The implementation to register.</param>
    </member>
    <member name="P:System.Spatial.SpatialImplementation.RepresentationEquality">
      <summary>Returns spatial equality instance for doing representation equality. </summary>
      <returns>Returns spatial equality instance.</returns>
    </member>
    <member name="T:System.Spatial.SpatialOperations">
      <summary>The class responsible for knowing how to perform operations for a particular implementation of spatial types.</summary>
    </member>
    <member name="M:System.Spatial.SpatialOperations.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.SpatialOperations" /> class.</summary>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Area(System.Spatial.GeographicSurface)">
      <summary>The geographic area.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Area(System.Spatial.GeometricSurface)">
      <summary>The geometric area.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Boundary(System.Spatial.Geography)">
      <summary>The geographic boundary.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Boundary(System.Spatial.Geometry)">
      <summary>The geometric boundary.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Buffer(System.Spatial.Geography,System.Double,System.Double)">
      <summary>The geographic buffer.</summary>
      <returns>The buffered geography.</returns>
      <param name="operand">The operand.</param>
      <param name="distance">The distance to buffer.</param>
      <param name="tolerance">The tolerance of the distance.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Buffer(System.Spatial.Geometry,System.Double,System.Double)">
      <summary>The geometric buffer.</summary>
      <returns>The buffered geometry.</returns>
      <param name="operand">The operand.</param>
      <param name="distance">The distance to buffer.</param>
      <param name="tolerance">The tolerance of the distance.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Centroid(System.Spatial.GeographicSurface)">
      <summary>The geographic centroid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Centroid(System.Spatial.GeometricSurface)">
      <summary>The geometric centroid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Contains(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic contains.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Contains(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric contains.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.ConvexHull(System.Spatial.Geography)">
      <summary>The geographic convex hull.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.ConvexHull(System.Spatial.Geometry)">
      <summary>The geometric convex hull.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Crosses(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic crosses.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Crosses(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric crosses.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Difference(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Difference(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Distance(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic distance.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Distance(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric distance.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Envelope(System.Spatial.Geography)">
      <summary>The geographic envelope.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Envelope(System.Spatial.Geometry)">
      <summary>The geometric envelope.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.GeographicEquals(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic equals.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.GeometricEquals(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric equals.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.GetBounds(System.Spatial.Geography,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>The geographic get bounds.</summary>
      <param name="operand">The operand.</param>
      <param name="minX">The minimum X.</param>
      <param name="minY">The minimum Y.</param>
      <param name="maxX">The maximum X.</param>
      <param name="maxY">The maximum Y.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.GetBounds(System.Spatial.Geometry,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>The geometric get bounds.</summary>
      <param name="operand">The operand.</param>
      <param name="minX">The minimum X.</param>
      <param name="minY">The minimum Y.</param>
      <param name="maxX">The maximum X.</param>
      <param name="maxY">The maximum Y.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Intersection(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic intersection.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Intersection(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric intersection.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Intersects(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic intersects.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Intersects(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric intersects.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.IsSimple(System.Spatial.Geography)">
      <summary>The geographic is simple.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.IsSimple(System.Spatial.Geometry)">
      <summary>The geometric is simple.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.IsValid(System.Spatial.Geography)">
      <summary>The geographic is valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.IsValid(System.Spatial.Geometry)">
      <summary>The geometric is valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Length(System.Spatial.GeographicCurve)">
      <summary>The geographic length.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Length(System.Spatial.GeometricCurve)">
      <summary>The geometric length.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.MakeValid(System.Spatial.Geography)">
      <summary>The geographic make valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.MakeValid(System.Spatial.Geometry)">
      <summary>The geometric make valid.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Overlaps(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic overlaps.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Overlaps(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric overlaps.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.PointOnSurface(System.Spatial.GeographicSurface)">
      <summary>The geographic point on surface.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.PointOnSurface(System.Spatial.GeometricSurface)">
      <summary>The geometric point on surface.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Reduce(System.Spatial.Geography,System.Double)">
      <summary>The geographic reduce.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
      <param name="tolerance">The tolerance of the operation.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Reduce(System.Spatial.Geometry,System.Double)">
      <summary>The geometric reduce.</summary>
      <returns>The operation result.</returns>
      <param name="operand">The operand.</param>
      <param name="tolerance">The tolerance of the operation.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Register(System.Double,System.Spatial.SpatialOperations)">
      <summary>Used to register spatial operations to be used.</summary>
      <returns>A disposable that removes the operations when disposed.</returns>
      <param name="priority">The priority of the operations being registered.</param>
      <param name="operations">The operations to register.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.SymmetricDifference(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic symmetric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.SymmetricDifference(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric symmetric difference.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Touches(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic touches.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Touches(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric touches.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Union(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic union.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Union(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric union.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Within(System.Spatial.Geography,System.Spatial.Geography)">
      <summary>The geographic within.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="M:System.Spatial.SpatialOperations.Within(System.Spatial.Geometry,System.Spatial.Geometry)">
      <summary>The geometric within.</summary>
      <returns>The operation result.</returns>
      <param name="operand1">The operand 1.</param>
      <param name="operand2">The operand 2.</param>
    </member>
    <member name="T:System.Spatial.SpatialReader`1">
      <summary>The reader to be used by spatial formats.</summary>
      <typeparam name="TSource">The type of source that the reader operates on.</typeparam>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.#ctor(System.Spatial.SpatialChain)">
      <summary> Creates a new instance of the <see cref="T:System.Spatial.SpatialReader`1" /> class.</summary>
      <param name="destination">The instance of the pipeline that the reader will message while it is reading.</param>
    </member>
    <member name="P:System.Spatial.SpatialReader`1.Destination">
      <summary>The pipeline that is messaged while the reader is reading.</summary>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.ReadGeography(`0)">
      <summary>Parses some serialized format that represents one or more geographic spatial values, passing the first one down the pipeline. </summary>
      <param name="input">The input string.</param>
      <exception cref="T:System.Spatial.ParseErrorException">Throws if the input is not valid. In that case, guarantees that it will not pass anything down the pipeline, or will clear the pipeline by passing down a reset.</exception>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.ReadGeometry(`0)">
      <summary>Parses some serialized format that represents one or more geometric spatial values, passing the first one down the pipeline.</summary>
      <param name="input">The input string.</param>
      <exception cref="T:System.Spatial.ParseErrorException">Throws if the input is not valid. In that case, guarantees that it will not pass anything down the pipeline, or will clear the pipeline by passing down a reset.</exception>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.Reset">
      <summary>Sets the reader and underlying destination back to a clean starting state after an exception.</summary>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.TryReadGeography(`0,System.String@)">
      <summary>Parses some serialized format that represents a geographic spatial value, passing the result down the pipeline.</summary>
      <returns>Is true if the read is successful, is false otherwise.</returns>
      <param name="input">The input string.</param>
      <param name="errorMessage">The error message to report to the developer.</param>
    </member>
    <member name="M:System.Spatial.SpatialReader`1.TryReadGeometry(`0,System.String@)">
      <summary>Parses some serialized format that represents a geometric spatial value, passing the result down the pipeline.</summary>
      <returns>Is true if the read is successful, is false otherwise.</returns>
      <param name="input">The input string.</param>
      <param name="errorMessage">The error message to report to the developer.</param>
    </member>
    <member name="T:System.Spatial.SpatialType">
      <summary>Defines a list of allowed open gis types.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.Unknown">
      <summary>The unknown type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.Point">
      <summary>The point type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.LineString">
      <summary>The line string type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.Polygon">
      <summary>The polygon type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.MultiPoint">
      <summary>The multipoint type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.MultiLineString">
      <summary>The multi-line-string type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.MultiPolygon">
      <summary>The multipolygon type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.Collection">
      <summary>The collection type.</summary>
    </member>
    <member name="F:System.Spatial.SpatialType.FullGlobe">
      <summary>The full globe type.</summary>
    </member>
    <member name="T:System.Spatial.SpatialTypeExtensions">
      <summary>This class provides a place to add extension methods that work with ispatial. </summary>
    </member>
    <member name="M:System.Spatial.SpatialTypeExtensions.SendTo(System.Spatial.ISpatial,System.Spatial.SpatialChain)">
      <summary>Allows the delegation of the call to the proper type (geography or geometric).</summary>
      <param name="shape">The instance that will have send to called.</param>
      <param name="destination">The pipeline that the instance will be sent to.</param>
    </member>
    <member name="T:System.Spatial.SpatialValidator">
      <summary>The base class for spatial type validator implementations.</summary>
    </member>
    <member name="M:System.Spatial.SpatialValidator.Create">
      <summary>The factory for creating the currently registered spatial validator implementation.</summary>
      <returns>The created spatial validator.</returns>
    </member>
    <member name="T:System.Spatial.Transform`2">
      <summary>Holds the start and end of a transformation. Given some operation on the start, something will be produced at the end.</summary>
      <typeparam name="TSourceProtocol">The type of the start of the transformation.</typeparam>
      <typeparam name="TDestinationProtocol">The type of the start of the transformation.</typeparam>
    </member>
    <member name="M:System.Spatial.Transform`2.#ctor(`0,`1)">
      <summary> Creates a new instance of the <see cref="T:System.Spatial.Transform`2" /> class.</summary>
      <param name="start">The instance to use as the start of the transformation.</param>
      <param name="end">The instance to use as the end of the transformation.</param>
    </member>
    <member name="P:System.Spatial.Transform`2.End">
      <summary>The end of the transformation.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Spatial.Transform`2.Equals(System.Object)">
      <summary>Determines the equality of two transforms.</summary>
      <returns>Is true if the two transforms are equal, false otherwise.</returns>
      <param name="obj">The other transform to compare to.</param>
    </member>
    <member name="M:System.Spatial.Transform`2.Equals(System.Spatial.Transform{`0,`1})">
      <summary>Determines the equality of two transforms.</summary>
      <returns>Is true if the two transforms are equal, false otherwise.</returns>
      <param name="other">The other transform to compare to.</param>
    </member>
    <member name="M:System.Spatial.Transform`2.GetHashCode">
      <summary>Gets the hash code for this instance.</summary>
      <returns>The hash code representing this instance.</returns>
    </member>
    <member name="M:System.Spatial.Transform`2.op_Equality(System.Spatial.Transform{`0,`1},System.Spatial.Transform{`0,`1})">
      <summary>Determines the equality of two transforms.</summary>
      <returns>Is true if the two transforms are equal, false otherwise.</returns>
      <param name="left">The transform on the left side of the equality operator.</param>
      <param name="right">The transform on the right side of the equality operator.</param>
    </member>
    <member name="M:System.Spatial.Transform`2.op_Inequality(System.Spatial.Transform{`0,`1},System.Spatial.Transform{`0,`1})">
      <summary>Determines the equality of two transforms.</summary>
      <returns>Is true if the two transforms are equal, false otherwise.</returns>
      <param name="left">The transform on the left side of the inequality operator.</param>
      <param name="right">The transform on the right side of the inequality operator.</param>
    </member>
    <member name="P:System.Spatial.Transform`2.Start">
      <summary>The start of the transformation.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Spatial.WellKnownBinaryData">
      <summary>This class is used to hold well-known binary data for use by the well-known binary format and well-known binary reader </summary>
    </member>
    <member name="M:System.Spatial.WellKnownBinaryData.#ctor(System.Byte[],System.Int32)">
      <summary> Creates an instance of the <see cref="T:System.Spatial.WellKnownBinaryData" /> class </summary>
      <param name="data">The data to be read.</param>
      <param name="srid">The coordinate system ID to be used during the read.</param>
    </member>
    <member name="P:System.Spatial.WellKnownBinaryData.Data">
      <summary>Gets the data to be read.</summary>
      <returns>Returns <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Spatial.WellKnownBinaryData.Srid">
      <summary>Gets the coordinate system ID to be used during read. </summary>
      <returns>The coordinate system ID.</returns>
    </member>
    <member name="T:System.Spatial.WellKnownBinaryFormat">
      <summary>The object to move spatial types to and from the well-known binary format.</summary>
    </member>
    <member name="M:System.Spatial.WellKnownBinaryFormat.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Spatial.WellKnownBinaryFormat" /> class. </summary>
    </member>
    <member name="M:System.Spatial.WellKnownBinaryFormat.#ctor(System.Boolean,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:System.Spatial.WellKnownBinaryFormat" /> class. </summary>
      <param name="hasZ">if set to true [has Z].</param>
      <param name="hasM">if set to true [has M].</param>
    </member>
    <member name="M:System.Spatial.WellKnownBinaryFormat.Create">
      <summary>Creates the implementation of the format.</summary>
      <returns>Returns the created well-known binary format implementation.</returns>
    </member>
    <member name="M:System.Spatial.WellKnownBinaryFormat.Create(System.Boolean,System.Boolean)">
      <summary>Creates the implementation of the format.</summary>
      <returns>Returns the created well-known binary format implementation.</returns>
      <param name="hasZ">Controls the writing of the Z dimension.</param>
      <param name="hasM">Controls the writing of the M dimension.</param>
    </member>
    <member name="T:System.Spatial.WellKnownTextSqlFormat">
      <summary>The object to move spatial types to and from the well-known text sql format.</summary>
    </member>
    <member name="M:System.Spatial.WellKnownTextSqlFormat.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Spatial.WellKnownTextSqlFormat" /> class.</summary>
    </member>
    <member name="M:System.Spatial.WellKnownTextSqlFormat.Create">
      <summary>Creates the implementation of the format.</summary>
      <returns>Returns the created well-known text sql format implementation.</returns>
    </member>
  </members>
</doc>