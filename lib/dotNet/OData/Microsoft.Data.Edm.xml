<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Data.Edm</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.Edm.EdmAssociationMultiplicity">
      <summary>Enumerates the multiplicities of EDM associations.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmAssociationMultiplicity.Unknown">
      <summary>The multiplicity of the association end is unknown.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmAssociationMultiplicity.ZeroOrOne">
      <summary>The multiplicity of the association end is zero or one.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmAssociationMultiplicity.One">
      <summary>The multiplicity of the association end is one.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmAssociationMultiplicity.Many">
      <summary>The multiplicity of the association end is many.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmConcurrencyMode">
      <summary>Enumerates the EDM property concurrency modes.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmConcurrencyMode.None">
      <summary>Denotes a property that should be used for optimistic concurrency checks.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmConcurrencyMode.Fixed">
      <summary>Denotes a property that should not be used for optimistic concurrency checks.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmContainerElementKind">
      <summary>Defines EDM container element types.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmContainerElementKind.None">
      <summary>Represents an element where the container kind is unknown or in error.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmContainerElementKind.EntitySet">
      <summary>Represents an element implementing <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmContainerElementKind.AssociationSet">
      <summary>Represents an element implementing <see cref="T:Microsoft.Data.Edm.IEdmAssociationSet" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmContainerElementKind.FunctionImport">
      <summary>Represents an element implementing <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport" />.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmFunctionParameterMode">
      <summary>Enumerates the modes of parameters of EDM functions.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmFunctionParameterMode.In">
      <summary>Denotes that a parameter is used for input.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmFunctionParameterMode.Out">
      <summary>Denotes that a parameter is used for output.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmFunctionParameterMode.InOut">
      <summary>Denotes that a parameter is used for input and output.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmFunctionParameterMode.None">
      <summary>Denotes that a parameter with an unknown or error directionality.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmLocation">
      <summary>Represents the location of an EDM item.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.EdmLocation.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.EdmLocation" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.EdmLocation.ToString">
      <summary>Gets a string representation of the location.</summary>
      <returns>A string representation of the location.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmOnDeleteAction">
      <summary>Enumerates the actions EDM can apply on deletes.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmOnDeleteAction.None">
      <summary>Takes no action on delete.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmOnDeleteAction.Cascade">
      <summary>On delete also delete items on the other end of the association.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmPrimitiveTypeKind">
      <summary>Enumerates the kinds of EDM primitives.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.None">
      <summary>Represents a primitive type of unknown kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Binary">
      <summary>Represents a Binary type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Boolean">
      <summary>Represents a Boolean type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Byte">
      <summary>Represents a Byte type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.DateTime">
      <summary>Represents a DateTime type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.DateTimeOffset">
      <summary>Represents a DateTimeOffset type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Decimal">
      <summary>Represents a Decimal type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Double">
      <summary>Represents a Double type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Guid">
      <summary>Represents a Guid type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Int16">
      <summary>Represents an Int16 type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Int32">
      <summary>Represents an Int32 type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Int64">
      <summary>Represents an Int64 type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.SByte">
      <summary>Represents a SByte type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Single">
      <summary>Represents a Single type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.String">
      <summary>Represents a String type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Stream">
      <summary>Represents a Stream type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Time">
      <summary>Represents a Time type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Geography">
      <summary>Represents an arbitrary Geography type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Point">
      <summary>Represents a geography Point type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.LineString">
      <summary>Represents a geography LineString type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Polygon">
      <summary>Represents a geography Polygon type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeographyCollection">
      <summary>Represents a geography GeographyCollection type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.MultiPolygon">
      <summary>Represents a geography MultiPolygon type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.MultiLineString">
      <summary>Represents a geography MultiLineString type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.MultiPoint">
      <summary>Represents a geography MultiPoint type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.Geometry">
      <summary>Represents an arbitrary Geometry type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricPoint">
      <summary>Represents a geometry Point type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricLineString">
      <summary>Represents a geometry LineString type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricPolygon">
      <summary>Represents a geometry Polygon type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometryCollection">
      <summary>Represents a geometry GeometryCollection type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricMultiPolygon">
      <summary>Represents a geometry MultiPolygon type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricMultiLineString">
      <summary>Represents a geometry MultiLineString type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPrimitiveTypeKind.GeometricMultiPoint">
      <summary>Represents a geometry MultiPoint type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmPropertyKind">
      <summary>Defines EDM property types.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPropertyKind.Structural">
      <summary>Represents a property implementing <see cref="T:Microsoft.Data.Edm.IEdmStructuralProperty" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPropertyKind.Navigation">
      <summary>Represents a property implementing <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmPropertyKind.None">
      <summary>Represents a property with an unknown or error kind.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmSchemaElementKind">
      <summary>Defines EDM schema element types.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmSchemaElementKind.None">
      <summary>Represents a schema element with unknown or error kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmSchemaElementKind.TypeDefinition">
      <summary>Represents a schema element implementing <see cref="T:Microsoft.Data.Edm.IEdmSchemaType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmSchemaElementKind.Association">
      <summary>Represents a schema element implementing <see cref="T:Microsoft.Data.Edm.IEdmAssociation" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmSchemaElementKind.Function">
      <summary>Represents a schema element implementing <see cref="T:Microsoft.Data.Edm.IEdmFunction" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmSchemaElementKind.ValueTerm">
      <summary>Represents a schema element implementing <see cref="T:Microsoft.Data.Edm.IEdmValueTerm" />.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmTermKind">
      <summary>Defines EDM term kinds.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTermKind.None">
      <summary>Represents a term with unknown or error kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTermKind.Type">
      <summary>Represents a term implementing <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTermKind.Value">
      <summary>Represents a term implementing <see cref="T:Microsoft.Data.Edm.IEdmValueTerm" />.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.EdmTypeKind">
      <summary>Defines EDM metatypes.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.None">
      <summary>Represents a type with an unknown or error kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Primitive">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Entity">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Complex">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Row">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmRowType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Collection">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmCollectionType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.EntityReference">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmEntityReferenceType" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.EdmTypeKind.Enum">
      <summary>Represents a type implementing <see cref="T:Microsoft.Data.Edm.IEdmEnumType" />.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.ExtensionMethods">
      <summary>Contains extension methods for <see cref="T:Microsoft.Data.Edm.IEdmModel" /> interfaces.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Association(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Gets the association type that describes this navigation property.</summary>
      <returns>The association type that describes this navigation property.</returns>
      <param name="property">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.AssociationSets(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary>Returns association sets belonging to an <see cref="T:Microsoft.Data.Edm.IEdmEntityContainer" />.</summary>
      <returns>Association sets belonging to an IEdmEntityContainer.</returns>
      <param name="container">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.BaseComplexType(Microsoft.Data.Edm.IEdmComplexType)">
      <summary>Gets the base type of this references definition.</summary>
      <returns>The base type of this references definition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.BaseComplexType(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Gets the base type of this reference.</summary>
      <returns>The base type of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.BaseEntityType(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Gets the base type of this entity type definition.</summary>
      <returns>The base type of this entity type definition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.BaseEntityType(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Gets the base type of the definition of this reference.</summary>
      <returns>The base type of the definition of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.BaseType(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Returns the base type of the definition of this reference.</summary>
      <returns>The base type of the definition of this reference. </returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.CollectionDefinition(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Gets the definition of this multivalued reference.</summary>
      <returns>The definition of this multivalue reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.ComplexDefinition(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Gets the definition of this reference typed as an IEdmComplexTypeDefinition.</summary>
      <returns>The definition of this reference typed as an IEdmComplexTypeDefinition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.DeclaredNavigationProperties(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Gets the navigation properties declared in this entity definition.</summary>
      <returns>The navigation properties declared in this entity definition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.DeclaredNavigationProperties(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Gets the navigation properties declared in the definition of this reference.</summary>
      <returns>The navigation properties declared in the definition of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.DeclaredStructuralProperties(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Gets all structural properties declared in the IEdmStructuredTypeDefinition.</summary>
      <returns>All structural properties declared in the IEdmStructuredTypeDefinition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.DeclaredStructuralProperties(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Gets all structural properties declared in the definition of this reference.</summary>
      <returns>All structural properties declared in the definition of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.DependentEnd(Microsoft.Data.Edm.IEdmReferentialConstraint)">
      <summary>Gets the dependent end of this referential constraint.</summary>
      <returns>The dependent end of this referential constraint.</returns>
      <param name="constraint">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.ElementType(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Gets the element type of the definition of this collection reference.</summary>
      <returns>The element type of the definition of this collection reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.EntityDefinition(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Gets the definition of this entity reference.</summary>
      <returns>The definition of this entity reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.EntityReferenceDefinition(Microsoft.Data.Edm.IEdmEntityReferenceTypeReference)">
      <summary>Gets the definition of this entity reference type reference.</summary>
      <returns>The definition of this entity reference type reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.EntitySets(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary>Returns entity sets belonging to <see cref="T:Microsoft.Data.Edm.IEdmEntityContainer" />.</summary>
      <returns>Entity sets belonging to an <see cref="T:Microsoft.Data.Edm.IEdmEntityContainer" />.</returns>
      <param name="container">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.EntityType(Microsoft.Data.Edm.IEdmEntityReferenceTypeReference)">
      <summary>Gets the entity type referred to by the definition of this entity reference type reference.</summary>
      <returns>The entity type referred to by the definition of this entity reference type reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.EnumDefinition(Microsoft.Data.Edm.IEdmEnumTypeReference)">
      <summary>Gets the definition of this enumeration reference.</summary>
      <returns>The definition of this enumeration reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmAssociation)">
      <summary>Gets the errors, if any, that belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmAssociationSet)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="set">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmElement)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="element">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmEnumType)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmFunctionBase)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="function">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmFunctionParameter)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="parameter">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="property">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Errors(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Gets the errors, if any, which belong to this element or other nearby elements that might affect the validity of this element.</summary>
      <returns>Any errors that belong to this element or other nearby elements that might affect the validity of this element.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FindNavigationProperty(Microsoft.Data.Edm.IEdmEntityTypeReference,System.String)">
      <summary>Finds a navigation property declared in the definition of this reference by name.</summary>
      <returns>The requested navigation property if it exists. Otherwise, null.</returns>
      <param name="type">Reference to the calling object.</param>
      <param name="name">Name of the navigation property to find.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FindProperty(Microsoft.Data.Edm.IEdmStructuredTypeReference,System.String)">
      <summary>Finds a property from the definition of this reference.</summary>
      <returns>The requested property if it exists. Otherwise, null.</returns>
      <param name="type">Reference to the calling object.</param>
      <param name="name">Name of the property to find.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FindTypeAcrossModels(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Searches for a type with the given name in this model and all referenced models and returns null if no such type exists.</summary>
      <returns>The requested type, or null if no such type exists.</returns>
      <param name="model">The model to search.</param>
      <param name="qualifiedName">The qualified name of the type being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FindValueTermAcrossModels(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Searches for a value term with the given name in this model and all referenced models and returns null if no such value term exists.</summary>
      <returns>The requested value term, or null if no such value term exists.</returns>
      <param name="model">The model to search.</param>
      <param name="qualifiedName">The qualified name of the value term being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FindVocabularyAnnotationsAcrossModels(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmAnnotatable)">
      <summary>Gets an annotatable element's vocabulary annotations defined in a specific model and models referenced by that model.</summary>
      <returns>Annotations attached to the element by this model or by models referenced by this model.</returns>
      <param name="model">The model to search.</param>
      <param name="element">Element to check for annotations.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.From(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Gets the from end of this navigation property.</summary>
      <returns>The from end of this navigation property.</returns>
      <param name="property">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FullName(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Gets the full name of the element.</summary>
      <returns>The full name of the element.</returns>
      <param name="element">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FullName(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Gets the full name of the definition referred to by the type reference.</summary>
      <returns>The full name of this references definition.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.FunctionImports(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary>Returns function imports belonging to an IEdmEntityContainer.</summary>
      <returns>Function imports belonging to an IEdmEntityContainer.</returns>
      <param name="container">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable)">
      <summary>Gets an annotation from the annotatable element.</summary>
      <returns>The requested annotation if it exists. Otherwise, null.</returns>
      <param name="annotatable">Reference to the calling object.</param>
      <typeparam name="T">Type of the annotation being returned.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable,Microsoft.Data.Edm.Library.EdmTermName)">
      <summary>Gets an annotation from the annotatable element.</summary>
      <returns>The requested annotation if it exists. Otherwise, null.</returns>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="name">Name of the annotation to retrieve.</param>
      <typeparam name="T">Type of the annotation being returned.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetAnnotation(Microsoft.Data.Edm.IEdmAnnotatable,Microsoft.Data.Edm.Library.EdmTermName)">
      <summary>Gets an annotation from the annotatable element.</summary>
      <returns>The requested annotation if it exists. Otherwise, null.</returns>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="name">Name of the annotation to retrieve.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable,System.String,System.String)">
      <summary> ets an annotation corresponding to the given namespace and name provided.</summary>
      <returns>The requested annotation if it exists. Otherwise, null.</returns>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="namespaceName">Namespace of the annotation.</param>
      <param name="localName">Name of the annotation inside the namespace.</param>
      <typeparam name="T">Type of the annotation being returned.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetDocumentation(Microsoft.Data.Edm.IEdmElement)">
      <summary>Gets the documentation for the specified element. </summary>
      <returns>The documentation that exists on the element. Otherwise, null.</returns>
      <param name="element">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.GetEdmVersion(Microsoft.Data.Edm.IEdmModel)">
      <summary>Gets the value for the EDM version of the model.</summary>
      <returns>The version.</returns>
      <param name="model">Model the version has been set for.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsAbstract(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Gets whether the definition of this reference is abstract.</summary>
      <returns>True if the definition of this reference is abstract; otherwise; false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsAtomic(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Gets whether this reference refers to a collection.</summary>
      <returns>True if this reference refers to a collection; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmAssociation)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmAssociationEnd)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="end">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmAssociationSet)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="set">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmAssociationSetEnd)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="end">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmElement)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="element">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmEntityReferenceType)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="set">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmEnumType)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmFunctionBase)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="function">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="functionImport">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmFunctionParameter)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="parameter">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="property">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="property">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmReferentialConstraint)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="constraint">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsBad(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Specifies whether this element is an invalid element or is likely affected by an invalid element.</summary>
      <returns>True if this element is an invalid element or is likely affected by an invalid element; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.IsOpen(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Specifies whether the definition of this reference is open.</summary>
      <returns>True if the definition of this reference is open; otherwise, false.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Key(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Gets the declared key of the most defined entity with a declared key present.</summary>
      <returns>Key of this type.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Key(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Gets the entity key of the definition of this reference.</summary>
      <returns>The entity key of the definition of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.LocalName(Microsoft.Data.Edm.Annotations.IEdmAnnotation)">
      <summary>Gets the name of an annotation.</summary>
      <returns>The name of the annotation.</returns>
      <param name="annotation">Reference to the annotation.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Location(Microsoft.Data.Edm.IEdmElement)">
      <summary>Gets the location, if any, of this element.</summary>
      <returns>The location of the element, or null if the element is not locatable.</returns>
      <param name="item">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Namespace(Microsoft.Data.Edm.Annotations.IEdmAnnotation)">
      <summary>Gets the namespace of an annotation.</summary>
      <returns>The namespace of the annotation.</returns>
      <param name="annotation">Reference to the annotation.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.NavigationProperties(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Get the navigation properties declared in this entity type and all base types.</summary>
      <returns>The navigation properties declared in this entity type and all base types.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.NavigationProperties(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Gets the navigation properties declared in the definition of this reference and its base types.</summary>
      <returns>The navigation properties declared in the definition of this reference and its base types.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.PrimitiveDefinition(Microsoft.Data.Edm.IEdmPrimitiveTypeReference)">
      <summary>Gets the definition of this primitive type reference.</summary>
      <returns>Definition of this primitive type reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.PrimitiveKind(Microsoft.Data.Edm.IEdmPrimitiveTypeReference)">
      <summary>Gets the primitive kind of the definition referred to by this type reference.</summary>
      <returns>Primitive kind of the definition of this reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.Properties(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Gets all properties of the structured type definition and its base types.</summary>
      <returns>Properties of this type.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.RowDefinition(Microsoft.Data.Edm.IEdmRowTypeReference)">
      <summary>Gets the definition of this row type reference.</summary>
      <returns>The definition of this row type reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable,Microsoft.Data.Edm.Library.EdmTermName,``0)">
      <summary>Sets an annotation on the annotatable element.</summary>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="name">Name of the annotation to set.</param>
      <param name="value">Contents of the new annotation.</param>
      <typeparam name="T">Type of the annotation being set.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetAnnotation(Microsoft.Data.Edm.IEdmAnnotatable,System.String,System.String,Microsoft.Data.Edm.IEdmValue)">
      <summary>Sets an annotation on the annotatable element.</summary>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="namespaceName">Namespace of the annotation.</param>
      <param name="localName">Name of the annotation inside the namespace.</param>
      <param name="value">Contents of the new annotation.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable,System.String,System.String,``0)">
      <summary>Sets an annotation on the annotatable element.</summary>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="namespaceName">Namespace of the annotation.</param>
      <param name="localName">Name of the annotation inside the namespace.</param>
      <param name="value">Contents of the new annotation.</param>
      <typeparam name="T">Type of the annotation being set.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetAnnotation``1(Microsoft.Data.Edm.IEdmAnnotatable,``0)">
      <summary>Sets an annotation on the annotatable element.</summary>
      <param name="annotatable">Reference to the calling object.</param>
      <param name="value">Contents of the new annotation.</param>
      <typeparam name="T">Type of the annotation being set.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetDocumentation(Microsoft.Data.Edm.IEdmElement,Microsoft.Data.Edm.IEdmDocumentation)">
      <summary>Sets documentation for the specified element.</summary>
      <param name="element">Reference to the calling object.</param>
      <param name="documentation">Documentation to set.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.SetEdmVersion(Microsoft.Data.Edm.IEdmModel,System.Version)">
      <summary>Sets a value of EDM version attribute of the model.</summary>
      <param name="model">The model the version should be set for.</param>
      <param name="version">The version.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.StructuralProperties(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Gets the structural properties declared in this type definition and all base types.</summary>
      <returns>The structural properties declared in this type definition and all base types.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.StructuralProperties(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Gets all structural properties declared in the definition of this reference and all its base types.</summary>
      <returns>All structural properties declared in the definition of this reference and all its base types.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.StructuredDefinition(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Gets the definition of this structured type reference.</summary>
      <returns>The definition of this structured type reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.ToTraceString(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Returns the text representation of the current object.</summary>
      <returns>The text representation of the current object.</returns>
      <param name="schemaElement">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.TypeKind(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Gets the type kind of the type references definition.</summary>
      <returns>The type kind of the reference.</returns>
      <param name="type">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.TypeTerm(Microsoft.Data.Edm.Annotations.IEdmTypeAnnotation)">
      <summary>Gets the type term of this type annotation.</summary>
      <returns>The type term of this type annotation.</returns>
      <param name="annotation">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.ValueTerm(Microsoft.Data.Edm.Annotations.IEdmValueAnnotation)">
      <summary>Gets the value term of this value annotation.</summary>
      <returns>The value term of this value annotation.</returns>
      <param name="annotation">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.ExtensionMethods.VocabularyAnnotations(Microsoft.Data.Edm.IEdmAnnotatable,Microsoft.Data.Edm.IEdmModel)">
      <summary>Gets an annotatable element's vocabulary annotations as seen from a particular model.</summary>
      <returns>Annotations attached to the element by the model or by models referenced by the model.</returns>
      <param name="element">Reference to the calling object.</param>
      <param name="model">Model to check for annotations.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmAnnotatable">
      <summary>Represents an EDM object that can have annotations.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmAnnotatable.GetAnnotation(System.String,System.String)">
      <summary>Retrieves an annotation value from an EDM element. Returns null if no annotation with the given name exists.</summary>
      <returns>Returns the annotation that corresponds to the provided name. Returns null if no annotation with the given name exists. </returns>
      <param name="namespaceName">Namespace that the annotation belongs to.</param>
      <param name="localName">Local name of the annotation.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAnnotatable.ImmediateAnnotations">
      <summary>Gets the annotations associated with this element.</summary>
      <returns>The annotations associated with this element.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmAnnotatable.SetAnnotation(System.String,System.String,System.Object)">
      <summary>Sets an annotation value in an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed.</summary>
      <param name="namespaceName">Namespace that the annotation belongs to.</param>
      <param name="localName">Name of the annotation within the namespace.</param>
      <param name="value">New annotation to set</param>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmAssociation">
      <summary>Represents a definition of an EDM association type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociation.End1">
      <summary>Gets the first end of the association.</summary>
      <returns>The first end of the association.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociation.End2">
      <summary>Gets the second end of the association.</summary>
      <returns>The second end of the association.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociation.ReferentialConstraint">
      <summary>Gets the referential constraint of the association.</summary>
      <returns>The referential constraint of the association.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmAssociationEnd">
      <summary>Represents an end of an EDM association.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationEnd.DeclaringAssociation">
      <summary>Gets the declaring association of this association end.</summary>
      <returns>The declaring association of this association end.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationEnd.EntityType">
      <summary>Gets the entity type of this end of the association.</summary>
      <returns>The entity type of this end of the association.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationEnd.Multiplicity">
      <summary>Gets this multiplicity of the end.</summary>
      <returns>The multiplicity of the end.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationEnd.OnDelete">
      <summary>Gets the action to execute on the deletion of this association end.</summary>
      <returns>The action to execute on the deletion of this association end.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmAssociationSet">
      <summary>Represents an EDM association set.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationSet.Association">
      <summary>Gets the association of this association set.</summary>
      <returns>The association of this association set.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationSet.End1">
      <summary>Gets the first end of this association set.</summary>
      <returns>The first end of this association set.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationSet.End2">
      <summary>Gets the second end of this association set.</summary>
      <returns>The second end of this association set.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmAssociationSetEnd">
      <summary>Represents one of the ends of an EDM association set.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationSetEnd.EntitySet">
      <summary>Gets the entity set this association set end corresponds to.</summary>
      <returns>The entity set this association set end corresponds to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmAssociationSetEnd.Role">
      <summary>Gets the association end that describes the role of this association set end.</summary>
      <returns>The association end that describes the role of this association set end.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmBinaryTypeReference">
      <summary>Represents a reference to an EDM binary type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmBinaryTypeReference.IsFixedLength">
      <summary>Gets a value indicating whether this type specifies fixed length.</summary>
      <returns>True if the type specifies fixed length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmBinaryTypeReference.IsMaxMaxLength">
      <summary>Gets a value indicating whether this type specifies the maximum allowed max length.</summary>
      <returns>True if the type specifies the maximum allowed max length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmBinaryTypeReference.MaxLength">
      <summary>Gets the maximum length of this type.</summary>
      <returns>The maximum length of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmBinaryValue">
      <summary>Represents an EDM binary value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmBinaryValue.Value">
      <summary>Gets the definition of this binary value.</summary>
      <returns>The definition of this binary value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmBooleanValue">
      <summary>Represents an EDM Boolean value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmBooleanValue.Value">
      <summary>Gets a value indicating whether the value of this Boolean value is true or false.</summary>
      <returns>True if the value of this Boolean value is true; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmCheckable">
      <summary>Defines an EDM component who is invalid or whose validity is unknown at construction.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmCheckable.Errors">
      <summary>Gets an error if one exists with the current object.</summary>
      <returns>An error.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmCollectionType">
      <summary>Represents a definition of an EDM collection type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmCollectionType.ElementType">
      <summary>Gets the element type of this collection.</summary>
      <returns>The element type of this collection.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmCollectionType.IsAtomic">
      <summary>Gets a value indicating whether a collection should be treated as an atomic unit. If true, the type will be serialized to a CSDL as MultiValue, if false it will be serialized as Collection.</summary>
      <returns>True if a collection should be treated as an atomic unit; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmCollectionTypeReference">
      <summary>Represents a reference to an EDM collection type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmCollectionValue">
      <summary>Represents an EDM collection value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmCollectionValue.ElementValues">
      <summary>Gets the values stored in this collection.</summary>
      <returns>The values stored in this collection.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmComplexType">
      <summary>Represents a definition of an EDM complex type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmComplexTypeReference">
      <summary>Represents a reference to an EDM complex type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmDateTimeOffsetValue">
      <summary>Represents an EDM DateTimeOffset value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDateTimeOffsetValue.Value">
      <summary>Gets the definition of this DateTimeOffset value.</summary>
      <returns>The definition of this DateTimeOffset value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmDateTimeValue">
      <summary>Represents an EDM DateTime value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDateTimeValue.Value">
      <summary>Gets the definition of this DateTime value.</summary>
      <returns>The definition of this DateTime value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmDecimalTypeReference">
      <summary>Represents a reference to an EDM decimal type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDecimalTypeReference.Precision">
      <summary>Gets the precision of this type.</summary>
      <returns>The precision of this type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDecimalTypeReference.Scale">
      <summary>Gets the scale of this type.</summary>
      <returns>The scale of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmDecimalValue">
      <summary>Represents an EDM decimal value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDecimalValue.Value">
      <summary>Gets the definition of this decimal value.</summary>
      <returns>The definition of this decimal value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmDocumentation">
      <summary>Represents an EDM documentation.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDocumentation.LongDescription">
      <summary>Gets a long description of this documentation.</summary>
      <returns>A long description of this documentation.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmDocumentation.Summary">
      <summary>Gets a summary of this documentation.</summary>
      <returns>A summary of this documentation.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmElement">
      <summary>Represents an EDM element.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityContainer">
      <summary>Represents an EDM entity container.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEntityContainer.Elements">
      <summary>Gets a collection of the elements of this entity container.</summary>
      <returns>A collection of the elements of this entity container.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmEntityContainer.FindAssociationSet(System.String)">
      <summary>Searches for an association set with the given name in this entity container and returns null if no such set exists.</summary>
      <returns>The requested element, or null if the element does not exist.</returns>
      <param name="setName">The name of the element being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmEntityContainer.FindEntitySet(System.String)">
      <summary>Searches for an entity set with the given name in this entity container and returns null if no such set exists.</summary>
      <returns>The requested element, or null if the element does not exist.</returns>
      <param name="setName">The name of the element being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmEntityContainer.FindFunctionImports(System.String)">
      <summary>Searches for function imports with the given name in this entity container and returns null if no such function import exists.</summary>
      <returns>A group of the requested function imports, or null if no such function import exists.</returns>
      <param name="functionName">The name of the function import being found.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityContainerElement">
      <summary>Represents the common elements of all EDM entity container elements.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEntityContainerElement.ContainerElementKind">
      <summary>Gets the kind of element of this container element.</summary>
      <returns>The kind of element of this container element.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityReferenceType">
      <summary>Represents a definition of an EDM entity reference type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEntityReferenceType.EntityType">
      <summary>Gets the entity type pointed to by this entity reference.</summary>
      <returns>The entity type pointed to by this entity reference.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityReferenceTypeReference">
      <summary>Represents a reference to an EDM entity reference type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntitySet">
      <summary>Represents an EDM entity set.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEntitySet.ElementType">
      <summary>Gets the entity type contained in this entity set.</summary>
      <returns>The entity type contained in this entity set.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityType">
      <summary>Represents a definition of an EDM entity type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEntityType.DeclaredKey">
      <summary>Gets the structural properties of the entity type that make up the entity key.</summary>
      <returns>The structural properties of the entity type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEntityTypeReference">
      <summary>Represents a reference for the definition of an EDM entity type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEnumMember">
      <summary>Represents a definition of an EDM enumeration type member.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEnumMember.DeclaringType">
      <summary>Gets the type that this member belongs to.</summary>
      <returns>The type that this member belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEnumMember.Value">
      <summary>Gets the value of this enumeration type member.</summary>
      <returns>The value of this enumeration type member.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEnumType">
      <summary>Represents a definition of an EDM enumeration type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEnumType.Members">
      <summary>Gets the members of this enumeration type.</summary>
      <returns>The members of this enumeration type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEnumType.TreatAsBits">
      <summary>Gets a value indicating whether the enumeration type can be treated as a bit field.</summary>
      <returns>True if the value indicating whether the enumeration type can be treated as a bit field; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmEnumType.UnderlyingType">
      <summary>Gets the underlying type of this enumeration type.</summary>
      <returns>The underlying type of this enumeration type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmEnumTypeReference">
      <summary>Represents a reference for a definition of an EDM enumeration type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmFloatingValue">
      <summary>Represents an EDM floating point value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFloatingValue.Value">
      <summary>Gets the definition of this floating value.</summary>
      <returns>The definition of this floating value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmFunction">
      <summary>Represents an EDM function.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunction.DefiningExpression">
      <summary>Gets the defining expression of this function.</summary>
      <returns>The defining expression of this function.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmFunctionBase">
      <summary>Represents the common base type of EDM functions and function imports.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmFunctionBase.FindParameter(System.String)">
      <summary>Searches for a parameter with the given name, and returns null if no such parameter exists.</summary>
      <returns>The requested parameter or null if no such parameter exists.</returns>
      <param name="name">The name of the parameter being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionBase.Parameters">
      <summary>Gets the collection of parameters for this function.</summary>
      <returns>The collection of parameters for this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionBase.ReturnType">
      <summary>Gets the return type of this function.</summary>
      <returns>The return type of this function.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmFunctionImport">
      <summary>Represents an EDM function import.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionImport.Bindable">
      <summary>Gets a value indicating whether this function import can be used as an extension method for the type of the first parameter of this function import.</summary>
      <returns>True if the function import can be used as an extension method for the type of the first parameter of this function import; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionImport.Composable">
      <summary>Gets a value indicating whether this function import can be composed inside expressions. <see cref="P:Microsoft.Data.Edm.IEdmFunctionImport.Composable" /> cannot be set to true if <see cref="P:Microsoft.Data.Edm.IEdmFunctionImport.Composable" /> is set to true.</summary>
      <returns>True if the function import can be composed inside expressions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionImport.EntitySet">
      <summary>Gets the entity set where the result of this function import will be contained in.</summary>
      <returns>The entity set where the result of this function import will be contained in.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionImport.EntitySetPath">
      <summary>Gets the entity set path of the function import.</summary>
      <returns>The entity set path of the function import.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionImport.SideEffecting">
      <summary>Gets a value indicating whether this function import has side-effects. <see cref="P:Microsoft.Data.Edm.IEdmFunctionImport.SideEffecting" /> cannot be set to true if <see cref="P:Microsoft.Data.Edm.IEdmFunctionImport.SideEffecting" /> is set to true.</summary>
      <returns>True if the function import has side-effects; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmFunctionParameter">
      <summary>Represents a parameter of an EDM function.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionParameter.Mode">
      <summary>Gets the mode of this function parameter.</summary>
      <returns>The mode of this function parameter.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmFunctionParameter.Type">
      <summary>Gets the type of this function parameter.</summary>
      <returns>The type of this function parameter.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmGuidValue">
      <summary>Represents an EDM integer value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmGuidValue.Value">
      <summary>Gets the definition of this GUID value.</summary>
      <returns>The definition of this GUID value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmIntegerValue">
      <summary>Represents an EDM integer value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmIntegerValue.Value">
      <summary>Gets the definition of this integer value.</summary>
      <returns>The definition of this integer value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmLocatable">
      <summary>Represents the interface for all EDM elements that can be located.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmLocatable.Location">
      <summary>Gets the location of this element.</summary>
      <returns>The location of this element.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmModel">
      <summary>Semantic representation of an EDM model.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmModel.EntityContainers">
      <summary>Gets the collection of entity containers in this model.</summary>
      <returns>The collection of entity containers in this model.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindAssociation(System.String)">
      <summary>Searches for an association with the given name in this model and returns null if no such association exists.</summary>
      <returns>The requested association, or null if no such association exists.</returns>
      <param name="qualifiedName">The qualified name of the association being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindEntityContainer(System.String)">
      <summary>Searches for an entity container with the given name in this model and returns null if no such entity container exists.</summary>
      <returns>The requested entity container, or null if no such entity container exists.</returns>
      <param name="name">The name of the entity container being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindFunctions(System.String)">
      <summary>Searches for functions with the given name in this model and returns an empty enumerable if no such function exists.</summary>
      <returns>A set functions sharing the specified qualified name, or an empty enumerable if no such function exists.</returns>
      <param name="qualifiedName">The qualified name of the function being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindType(System.String)">
      <summary>Searches for a type with the given name in this model and returns null if no such type exists.</summary>
      <returns>The requested type, or null if no such type exists.</returns>
      <param name="qualifiedName">The qualified name of the type being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindValueTerm(System.String)">
      <summary>Searches for a value term with the given name in this model and returns null if no such value term exists.</summary>
      <returns>The requested value term, or null if no such value term exists.</returns>
      <param name="qualifiedName">The qualified name of the value term being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmModel.FindVocabularyAnnotations(Microsoft.Data.Edm.IEdmAnnotatable)">
      <summary>Searches for vocabulary annotations specified by this model or a referenced model for a given element.</summary>
      <returns>The vocabulary annotations for the element.</returns>
      <param name="element">The annotated element.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmModel.References">
      <summary>Gets the collection of models referred to by this model.</summary>
      <returns>The collection of models referred to by this model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmModel.SchemaElements">
      <summary>Gets the collection of schema elements that are contained in this model.</summary>
      <returns>The collection of schema elements that are contained in this model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmModel.VocabularyAnnotations">
      <summary>Gets the collection of vocabulary annotations that are contained in this model.</summary>
      <returns>The collection of vocabulary annotations.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmNamedElement">
      <summary>Common base interface for all named EDM elements.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmNamedElement.Name">
      <summary>Gets the name of this element.</summary>
      <returns>The name of this element.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmNavigationProperty">
      <summary>Represents an EDM navigation property.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmNavigationProperty.To">
      <summary>Gets the destination end of this navigation property.</summary>
      <returns>The destination end of this navigation property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmPrimitiveType">
      <summary>Represents a definition of an EDM primitive type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmPrimitiveType.PrimitiveKind">
      <summary>Gets the primitive kind of this type.</summary>
      <returns>The primitive kind of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmPrimitiveTypeReference">
      <summary>Represents a reference to definition of an EDM primitive type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmPrimitiveValue">
      <summary>Represents an EDM primitive value.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmProperty">
      <summary>Represents an EDM property.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmProperty.DeclaringType">
      <summary>Gets the type that this property belongs to.</summary>
      <returns>The type that this property belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmProperty.PropertyKind">
      <summary>Gets the kind of this property.</summary>
      <returns>The kind of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmProperty.Type">
      <summary>Gets the type of this property.</summary>
      <returns>The type of this property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmPropertyValue">
      <summary>Represents a value of an EDM property.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmPropertyValue.Property">
      <summary>Gets the property this value is associated with.</summary>
      <returns>The property this value is associated with.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmPropertyValue.Value">
      <summary>Gets the data stored in this value.</summary>
      <returns>The data stored in this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmReferentialConstraint">
      <summary>Represents an EDM referential constraint in an association type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmReferentialConstraint.DependentProperties">
      <summary>Gets the dependent properties of this referential constraint. (The principal properties of the constraint are the key of the principal end.)</summary>
      <returns>The dependent properties of this referential constraint.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmReferentialConstraint.PrincipalEnd">
      <summary>Gets the principal end of this referential constraint.</summary>
      <returns>The principal end of this referential constraint.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmRowType">
      <summary>Represents an EDM row type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmRowTypeReference">
      <summary>Represents a reference to an EDM row type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmRowValue">
      <summary>Represents a value of an EDM row.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmSchemaElement">
      <summary>Common base interface for all named children of EDM schemata.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmSchemaElement.Namespace">
      <summary>Gets the namespace this schema element belongs to.</summary>
      <returns>The namespace this schema element belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmSchemaElement.SchemaElementKind">
      <summary>Gets the kind of this schema element.</summary>
      <returns>The kind of this schema element.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmSchemaType">
      <summary>Represents an EDM schema type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmSpatialTypeReference">
      <summary>Represents a reference to an EDM spatial type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmSpatialTypeReference.SpatialReferenceIdentifier">
      <summary>Gets the spatial reference identifier of this spatial type.</summary>
      <returns>The spatial reference identifier of this spatial type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStringTypeReference">
      <summary>Represents a reference to an EDM string type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringTypeReference.Collation">
      <summary>Gets a string representing the collation of this string type.</summary>
      <returns>A string representing the collation of this string type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringTypeReference.IsFixedLength">
      <summary>Gets a value indicating whether this string type specifies fixed length.</summary>
      <returns>True if this string type specifies fixed length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringTypeReference.IsMaxMaxLength">
      <summary>Gets a value indicating whether this string type specifies the maximum allowed maximum length.</summary>
      <returns>True if this string type specifies the maximum allowed maximum length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringTypeReference.IsUnicode">
      <summary>Gets a value indicating whether this string type supports Unicode encoding.</summary>
      <returns>True if this string type supports Unicode encoding; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringTypeReference.MaxLength">
      <summary>Gets the maximum length of this string type.</summary>
      <returns>The maximum length of this string type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStringValue">
      <summary>Represents an EDM string value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStringValue.Value">
      <summary>Gets the definition of this string value.</summary>
      <returns>The definition of this string value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStructuralProperty">
      <summary>Represents an EDM structural (that is, non-navigation) property.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuralProperty.ConcurrencyMode">
      <summary>Gets the concurrency mode of this property.</summary>
      <returns>The concurrency mode of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuralProperty.DefaultValue">
      <summary>Gets the default value of this property.</summary>
      <returns>The default value of this property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStructuredType">
      <summary>Represents the common base interface for definitions of EDM structured types.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuredType.BaseType">
      <summary>Gets the base type of this type.</summary>
      <returns>The base type of this type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuredType.DeclaredProperties">
      <summary>Gets the properties declared immediately within this type.</summary>
      <returns>The properties declared immediately within this type.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmStructuredType.FindProperty(System.String)">
      <summary>Searches for a structural or navigation property with the given name in this type and all base types and returns null if no such property exists.</summary>
      <returns>The requested property, or null if no such property exists.</returns>
      <param name="name">The name of the property being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuredType.IsAbstract">
      <summary>Gets a value indicating whether this type is abstract.</summary>
      <returns>True if this type is abstract; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuredType.IsOpen">
      <summary>Gets a value indicating whether this type is open.</summary>
      <returns>True if this type is open; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStructuredTypeReference">
      <summary>Represents a reference to an EDM structured type.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmStructuredValue">
      <summary>Represents an EDM structured value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.IEdmStructuredValue.FindPropertyValue(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Finds the value corresponding to the provided IEdmProperty.</summary>
      <returns>The found property, or null if no property was found.</returns>
      <param name="property">Property to find the value of.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmStructuredValue.PropertyValues">
      <summary>Gets the property values of this structured value.</summary>
      <returns>The property values of this structured value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmTemporalTypeReference">
      <summary>Represents a reference to an EDM temporal (Time, DateTime, DateTimeOffset) type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmTemporalTypeReference.Precision">
      <summary>Gets the precision of this temporal type.</summary>
      <returns>The precision of this temporal type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmTerm">
      <summary>Represents the term to which an annotation can bind.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmTerm.NamespaceUri">
      <summary>Gets the namespace of this term.</summary>
      <returns>The namespace of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmTerm.TermKind">
      <summary>Gets the kind of a term.</summary>
      <returns>The kind of a term.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmType">
      <summary>Represents the definition of an EDM type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmType.TypeKind">
      <summary>Gets the kind of this type.</summary>
      <returns>The kind of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmTypeReference">
      <summary>Represents a reference to an EDM type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmTypeReference.Definition">
      <summary>Gets the definition to which this type refers.</summary>
      <returns>The definition to which this type refers.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmTypeReference.IsNullable">
      <summary>Gets a value indicating whether this type is nullable.</summary>
      <returns>true of the type is nullable; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmValue">
      <summary>Represents an EDM value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmValue.Type">
      <summary>Gets the type of this value.</summary>
      <returns>The type of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.IEdmValueTerm">
      <summary>Represents an EDM value term.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.IEdmValueTerm.Type">
      <summary>Gets the type of the term.</summary>
      <returns>The type of the term.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.EdmAnnotationKind">
      <summary> Defines EDM annotation kinds. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Annotations.EdmAnnotationKind.None">
      <summary> Represents an annotation with unknown or error kind. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Annotations.EdmAnnotationKind.ImmediateValue">
      <summary> Represents an annotation implementing <see cref="T:Microsoft.Data.Edm.Annotations.IEdmImmediateValueAnnotation" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Annotations.EdmAnnotationKind.TermType">
      <summary> Represents an annotation implementing <see cref="T:Microsoft.Data.Edm.Annotations.IEdmTypeAnnotation" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Annotations.EdmAnnotationKind.TermValue">
      <summary> Represents an annotation implementing <see cref="T:Microsoft.Data.Edm.Annotations.IEdmValueAnnotation" />. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmAnnotation">
      <summary> Represents an EDM annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmAnnotation.AnnotationKind">
      <summary> Gets the kind of an annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmAnnotation.Term">
      <summary> Gets the term bound by the annotation. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmImmediateValueAnnotation">
      <summary> Represents an EDM annotation with an immediate value. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmImmediateValueAnnotation.Value">
      <summary> Gets the value of this annotation. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmPropertyValueBinding">
      <summary> Represents a property binding specified as part of an EDM Type Annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmPropertyValueBinding.BoundProperty">
      <summary> Gets the property given a value by the annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmPropertyValueBinding.Value">
      <summary> Gets the expression producing the value of the annotation. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmTypeAnnotation">
      <summary> Represents an EDM Type Annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmTypeAnnotation.Properties">
      <summary> Gets the value annotations for the properties of the type. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmValueAnnotation">
      <summary> Represents an EDM Value Annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmValueAnnotation.Value">
      <summary> Gets the expression producing the value of the annotation. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation">
      <summary> Represents an EDM Vocabulary Annotation. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation.Qualifier">
      <summary> Gets the qualifier used to discriminate between multiple bindings of the same property or type. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation.Target">
      <summary> Gets the element the annotation applies to. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.CsdlConstants">
      <summary> Constants for CSDL XML. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.CsdlConstants.EdmxVersion1">
      <summary> Version 1.0 of EDMX. Corresponds to EDMX namespace "http://schemas.microsoft.com/ado/2007/06/edmx". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.CsdlConstants.EdmxVersion2">
      <summary> Version 2.0 of EDMX. Corresponds to EDMX namespace "http://schemas.microsoft.com/ado/2008/10/edmx". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.CsdlConstants.EdmxVersion3">
      <summary> Version 3.0 of EDMX. Corresponds to EDMX namespace "http://schemas.microsoft.com/ado/2009/11/edmx". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.CsdlConstants.EdmxVersionLatest">
      <summary> The current latest version of EDMX. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.CsdlLocation">
      <summary> Defines a location in a XML file. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Csdl.CsdlLocation.LineNumber">
      <summary> Gets the line number in the file. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Csdl.CsdlLocation.LinePosition">
      <summary> Gets the position in the line. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.CsdlLocation.ToString">
      <summary> Gets a string representation of the location. </summary>
      <returns>A string representation of the location.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.CsdlReader">
      <summary> Provides CSDL parsing services for EDM models. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.CsdlReader.TryParse(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},Microsoft.Data.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@,Microsoft.Data.Edm.IEdmModel[])">
      <summary>  Returns an IEdmModel for the given CSDL artifacts. </summary>
      <returns>Success of the parse operation.</returns>
      <param name="readers">Collection of XmlReaders containing the CSDL artifacts.</param>
      <param name="model">The model generated by parsing.</param>
      <param name="errors">Errors reported while parsing.</param>
      <param name="references">Models to be references by the created model.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.CsdlReader.TryParse(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Boolean,Microsoft.Data.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@,Microsoft.Data.Edm.IEdmModel[])">
      <summary>  Returns an IEdmModel for the given CSDL artifacts. </summary>
      <returns>Success of the parse operation.</returns>
      <param name="readers">Collection of XmlReaders containing the CSDL artifacts.</param>
      <param name="allowRemovingImmutableAnnotations">A flag denoting whether the resulting IEdmModel will allow the removal of immutable CSDL annotations.</param>
      <param name="model">The model generated by parsing.</param>
      <param name="errors">Errors reported while parsing.</param>
      <param name="references">Models to be references by the created model.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.CsdlWriter">
      <summary> Provides CSDL serialization services for EDM models. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.CsdlWriter.WriteCsdl(Microsoft.Data.Edm.IEdmModel,System.Func`2)"></member>
    <member name="M:Microsoft.Data.Edm.Csdl.CsdlWriter.WriteCsdl(Microsoft.Data.Edm.IEdmModel,System.Xml.XmlWriter)">
      <summary> Outputs a CSDL artifact to the provided writer. </summary>
      <param name="model">Model to be written.</param>
      <param name="writer">XmlWriter the generated CSDL will be written to.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation">
      <summary> Represents whether a vocabulary annotation should be serialized within the element it applies to or in a seperate section of the CSDL. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation.Inline">
      <summary> The annotation should be serialized within the element being annotated. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation.OutOfLine">
      <summary> The annotation should be serialized in a seperate section. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.EdmxReader">
      <summary> Provides EDMX parsing services for EDM models. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,Microsoft.Data.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@)">
      <summary> Returns an IEdmModel for the given EDMX artifact. </summary>
      <returns>Success of the parse operation.</returns>
      <param name="reader">XmlReader containing the EDMX artifact.</param>
      <param name="model">The model generated by parsing</param>
      <param name="errors">Errors reported while parsing.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,System.Boolean,Microsoft.Data.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@)">
      <summary> Returns an IEdmModel for the given EDMX artifact. </summary>
      <returns>Success of the parse operation.</returns>
      <param name="reader">XmlReader containing the EDMX artifact.</param>
      <param name="allowRemovingImmutableAnnotations">A flag denoting whether the resulting IEdmModel will allow the removal of immutable CSDL annotations.</param>
      <param name="model">The model generated by parsing</param>
      <param name="errors">Errors reported while parsing.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.EdmxTarget">
      <summary> Specifies what target of an EDMX file. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.EdmxTarget.EntityFramework">
      <summary> The target is Entity Framework. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Csdl.EdmxTarget.OData">
      <summary> The target is OData. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.EdmxWriter">
      <summary> Provides EDMX serialization services for EDM models. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.EdmxWriter.WriteEdmx(Microsoft.Data.Edm.IEdmModel,System.Xml.XmlWriter,Microsoft.Data.Edm.Csdl.EdmxTarget)">
      <summary> Outputs an EDMX artifact to the provided XmlWriter. </summary>
      <param name="model">Model to be written.</param>
      <param name="writer">XmlWriter the generated EDMX will be written to.</param>
      <param name="target">Target implementation of the EDMX being generated.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods">
      <summary> Contains extension methods for <see cref="T:Microsoft.Data.Edm.IEdmModel" /> interfaces that are useful to serialization. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetDataServiceVersion(Microsoft.Data.Edm.IEdmModel)">
      <summary> Gets the value for the DataServiceVersion attribute used during EDMX serialization. </summary>
      <returns>Value of the attribute.</returns>
      <param name="model">Model the attribute has been set for.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetEdmxVersion(Microsoft.Data.Edm.IEdmModel)">
      <summary> Gets the value for the EDMX version of the model. </summary>
      <returns>The version.</returns>
      <param name="model">Model the version has been set for.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetIsValueExplicit(Microsoft.Data.Edm.IEdmEnumMember)">
      <summary> Gets an annotation indicating whether the value of an enum member should be explicitly serialized. </summary>
      <returns>Whether the member should have its value serialized.</returns>
      <param name="member">The member the annotation is on.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetMaxDataServiceVersion(Microsoft.Data.Edm.IEdmModel)">
      <summary> Gets the value for the MaxDataServiceVersion attribute used during EDMX serialization. </summary>
      <returns>Value of the attribute.</returns>
      <param name="model">Model the attribute has been set for</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetNamespacePrefixMappings(Microsoft.Data.Edm.IEdmModel)">
      <summary> Gets the preferred prefix mappings for xml namespaces from an IEdmModel </summary>
      <returns>Namespace prefixes that exist on the model.</returns>
      <param name="model">Reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetSchemaNamespace(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation)">
      <summary> Gets the schema an annotation should be serialized in. </summary>
      <returns>Name of the schema the annotation belongs to.</returns>
      <param name="annotation">Reference to the calling annotation.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetSchemaNamespace(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary> Gets the namespace name of a CSDL schema hosting the container during CSDL serialization. </summary>
      <returns>The schema namespace.</returns>
      <param name="container">Entity container the namespace has been set for.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.GetSerializationLocation(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation)">
      <summary> Gets the location an annotation should be serialized in. </summary>
      <returns>The location the annotation should be serialized at.</returns>
      <param name="annotation">Reference to the calling annotation.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetDataServiceVersion(Microsoft.Data.Edm.IEdmModel,System.Version)">
      <summary> Sets a value for the DataServiceVersion attribute in an EDMX artifact. </summary>
      <param name="model">The model the attribute should be set for.</param>
      <param name="version">The value of the attribute.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetEdmxVersion(Microsoft.Data.Edm.IEdmModel,System.Version)">
      <summary> Sets a value of EDMX version attribute of the model. </summary>
      <param name="model">The model the version should be set for.</param>
      <param name="version">The version.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetIsValueExplicit(Microsoft.Data.Edm.IEdmEnumMember,System.Nullable{System.Boolean})">
      <summary> Sets an annotation indicating whether the value of an enum member should be explicitly serialized. </summary>
      <param name="member">Member to set the annotation on.</param>
      <param name="isExplicit">If the value of the enum member should be explicitly serialized</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetMaxDataServiceVersion(Microsoft.Data.Edm.IEdmModel,System.Version)">
      <summary> Sets a value for the MaxDataServiceVersion attribute in an EDMX artifact. </summary>
      <param name="model">The model the attribute should be set for.</param>
      <param name="version">The value of the attribute.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetNamespacePrefixMappings(Microsoft.Data.Edm.IEdmModel,System.Xml.XmlNamespaceManager)">
      <summary> Sets an annotation on the IEdmModel to notify the serializer of preferred prefix mappings for xml namespaces. </summary>
      <param name="model">Reference to the calling object.</param>
      <param name="mappings">XmlNamespaceManage containing mappings between namespace prefixes and xml namespaces.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetSchemaNamespace(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation,System.String)">
      <summary> Sets the schema an annotation should appear in. </summary>
      <param name="annotation">The annotation the schema should be set for.</param>
      <param name="location">The schema the annotation belongs in.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetSchemaNamespace(Microsoft.Data.Edm.IEdmEntityContainer,System.String)">
      <summary> Sets the namespace name of a CSDL schema hosting the container during CSDL serialization. </summary>
      <param name="container">The entity container the namespace should be set for.</param>
      <param name="schemaNamespace">The schema namespace.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Csdl.SerializationExtensionMethods.SetSerializationLocation(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation,System.Nullable{Microsoft.Data.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation})">
      <summary> Sets the location an annotation should be serialized in. </summary>
      <param name="annotation">The annotation the location is being specified for.</param>
      <param name="location">The location the annotation should appear.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.EdmExpressionKind">
      <summary> Defines EDM expression kinds. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.None">
      <summary> Represents an expression with unknown or error kind. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.StringConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmStringConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.IntegerConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmIntegerConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.FloatingConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmFloatingConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.DecimalConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmDecimalConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.BooleanConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmBooleanConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.DateTimeConstant">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmDateTimeConstantExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.Record">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmRecordExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.Collection">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmCollectionExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.Path">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmPathExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.ParameterReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmParameterReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.FunctionReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmFunctionReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.PropertyReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmPropertyReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.TermPropertyReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmValueTermReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.EntitySetReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmEntitySetReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.EnumConstantReference">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmEnumConstantReferenceExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.If">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmIfExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.AssertType">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmAssertTypeExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.IsType">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmIsTypeExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.AnonymousFunction">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmAnonymousFunctionExpression" />. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Expressions.EdmExpressionKind.FunctionApplication">
      <summary> Represents an expression implementing <see cref="T:Microsoft.Data.Edm.Expressions.IEdmFunctionApplicationExpression" />. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmAnonymousFunctionExpression">
      <summary> Represents an EDM anonymous function expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmAnonymousFunctionExpression.Body">
      <summary> Gets the function body. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmAnonymousFunctionExpression.Parameters">
      <summary> Gets the parameters of the function. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmAssertTypeExpression">
      <summary> Represents an EDM type assertion expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmAssertTypeExpression.Operand">
      <summary> Gets the expression for which the type is asserted. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmAssertTypeExpression.Type">
      <summary> Gets the asserted type. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmBooleanConstantExpression">
      <summary> Represents an EDM boolean constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmBooleanConstantExpression.Value">
      <summary> Gets a value indicating whether the boolean value is true or false. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmCollectionExpression">
      <summary> Represents an EDM multi-value construction expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmCollectionExpression.Elements">
      <summary> Gets the constructed element values. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmDateTimeConstantExpression">
      <summary> Represents an EDM DateTime constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmDateTimeConstantExpression.Value">
      <summary> Gets the DateTime value. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmDecimalConstantExpression">
      <summary> Represents an EDM decimal constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmDecimalConstantExpression.Value">
      <summary> Gets the decimal value. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmEntitySetReferenceExpression">
      <summary> Represents an EDM entity set reference expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmEntitySetReferenceExpression.Referenced">
      <summary> Gets the referenced entity set. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmEnumConstantReferenceExpression"></member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmExpression">
      <summary> Represents an EDM expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmExpression.ExpressionKind">
      <summary> Gets the kind of this expression. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmFloatingConstantExpression">
      <summary> Represents an EDM floating constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmFloatingConstantExpression.Value">
      <summary> Gets the floating value. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmFunctionApplicationExpression">
      <summary> Represents an EDM function application expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmFunctionApplicationExpression.AppliedFunction">
      <summary> Gets the applied function. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmFunctionApplicationExpression.Arguments">
      <summary> Gets the arguments to the function. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmFunctionReferenceExpression">
      <summary> Represents an EDM function reference expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmFunctionReferenceExpression.ReferencedFunction">
      <summary> Gets the referenced function. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmIfExpression">
      <summary> Represents an EDM if expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIfExpression.IfFalse">
      <summary> Gets the expression to evaluate if Test evaluates to False. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIfExpression.IfTrue">
      <summary> Gets the expression to evaluate if Test evaluates to True. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIfExpression.Test">
      <summary> Gets the test expression. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmIntegerConstantExpression">
      <summary> Represents an EDM integer constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIntegerConstantExpression.Value">
      <summary> Gets the integral value. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmIsTypeExpression">
      <summary> Represents an EDM type test expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIsTypeExpression.Operand">
      <summary> Gets the expression whose type is to be tested. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmIsTypeExpression.Type">
      <summary> Gets the type to be tested against. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmLabeledElement">
      <summary> Represents an EDM labeled multi value element. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmLabeledElement.Expression">
      <summary> Gets the underlying expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmLabeledElement.Label">
      <summary> Gets the label. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmParameterReferenceExpression">
      <summary> Represents an EDM parameter reference expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmParameterReferenceExpression.Parameter">
      <summary> Gets the referenced parameter. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmPathExpression">
      <summary> Represents an EDM path expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPathExpression.Path">
      <summary> Gets the path as a decomposed qualified name. "A.B.C" is { "A", "B", "C" }. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPathExpression.Referenced">
      <summary> Gets the referenced element. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmPropertyConstructor">
      <summary> Represents an EDM property constructor specified as part of a CSDL Record expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPropertyConstructor.Name">
      <summary> Gets the name of the property </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPropertyConstructor.Value">
      <summary> Gets the expression for the value of the property. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmPropertyReferenceExpression">
      <summary> Represents an EDM property reference expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPropertyReferenceExpression.Base">
      <summary> Gets the expression for the structured value containing the referenced property. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmPropertyReferenceExpression.ReferencedProperty">
      <summary> Gets the referenced property. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmRecordExpression">
      <summary> Represents an EDM record construction expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmRecordExpression.DeclaredType">
      <summary> Gets the declared type of the record, or null if there is no declared type. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmRecordExpression.Properties">
      <summary> Gets the constructed property values. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmStringConstantExpression">
      <summary> Represents an EDM string constant expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmStringConstantExpression.Value">
      <summary> Gets the string value. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Expressions.IEdmValueTermReferenceExpression">
      <summary> Represents an EDM value term reference expression. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmValueTermReferenceExpression.Base">
      <summary> Gets the expression for the structured value containing the referenced term property. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmValueTermReferenceExpression.Qualifier">
      <summary> Gets the optional qualifier. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Expressions.IEdmValueTermReferenceExpression.Term">
      <summary> Gets the referenced value term. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmBinaryTypeReference">
      <summary> Represents a reference to an EDM binary type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmBinaryTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmBinaryTypeReference" /> class. </summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmBinaryTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmBinaryTypeReference" /> class. </summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
      <param name="isMaxMaxLength">Denotes whether the maximum length is the maximum allowed value.</param>
      <param name="maxLength">The maximum length of a value of this type.</param>
      <param name="isFixedLength">Denotes whether the length can vary. </param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmBinaryTypeReference.IsFixedLength">
      <summary> Gets a value indicating whether this type specifies fixed length. </summary>
      <returns>true if this type specifies fixed length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmBinaryTypeReference.IsMaxMaxLength">
      <summary> Gets a value indicating whether this type specifies the maximum allowed max length. </summary>
      <returns>true if this type specifies the maximum allowed maximum length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmBinaryTypeReference.MaxLength">
      <summary> Gets the maximum length of this type. </summary>
      <returns>The maximum length of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmBinaryValue">
      <summary> Represents an EDM integer value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmBinaryValue.#ctor(Microsoft.Data.Edm.IEdmBinaryTypeReference,System.Byte[])">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmBinaryValue" /> class. </summary>
      <param name="type">The type of the value.</param>
      <param name="value">The data represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmBinaryValue.Value">
      <summary> Gets the definition of this value. </summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmBooleanValue">
      <summary> Represents an EDM boolean value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmBooleanValue.#ctor(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmBooleanValue" /> class. </summary>
      <param name="type">Type of the boolean.</param>
      <param name="value">Boolean value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmBooleanValue.Value">
      <summary> Gets a value indicating whether the value of this boolean value is true or false. </summary>
      <returns>A value indicating whether the value of this boolean value is true or false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmCollectionType">
      <summary> Represents a definition of an EDM collection type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCollectionType.#ctor(Microsoft.Data.Edm.IEdmTypeReference,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmCollectionType" /> class. </summary>
      <param name="elementType">The type of the elements in this collection.</param>
      <param name="isAtomic">A flag representing if the type should be atomic.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCollectionType.ElementType">
      <summary> Gets the element type of this collection type. </summary>
      <returns>The element type of this collection type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCollectionType.IsAtomic">
      <summary> Gets a value indicating whether a collection should be treated as an atomic unit. If true, the type will be serialized to a CSDL as MultiValue, if false it will be serialized as Collection </summary>
      <returns>true if a collection should be treated as an atomic unit; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmCollectionTypeReference">
      <summary> Represents a reference to an EDM collection type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCollectionTypeReference.#ctor(Microsoft.Data.Edm.IEdmCollectionType,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmCollectionTypeReference" /> class. </summary>
      <param name="collectionType">The type definition this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCollectionTypeReference.CollectionDefinition">
      <summary> Gets the collection type to which this type refers. </summary>
      <returns>The collection type to which this type refers.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmCollectionValue">
      <summary> Represents an EDM collection value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCollectionValue.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmValue})">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmCollectionValue" /> class.  </summary>
      <param name="type">A reference to the MultiValue type that describes this collection value.</param>
      <param name="elementValues">The collection of values stored in this collection value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCollectionValue.ElementValues">
      <summary> Gets the values stored in this collection. </summary>
      <returns>The values stored in this collection.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmComplexType">
      <summary> Represents a definition of an EDM complex type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmComplexType.#ctor">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmComplexType" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmComplexType.#ctor(System.Boolean,System.Boolean,Microsoft.Data.Edm.IEdmComplexType,System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmComplexType" /> class. </summary>
      <param name="isAbstract">Denotes whether this complex type is abstract.</param>
      <param name="isOpen">Denotes whether this type is open.</param>
      <param name="baseType">The base type of this complex type.</param>
      <param name="namespaceName">The namespace this type belongs to.</param>
      <param name="name">The name of this type within its namespace.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmComplexType.ComputeCycleBaseType">
      <summary> Computes the type to return if a cycle is detected in the base type hierarchy. </summary>
      <returns>Bad type to stand in for the base type in case of a cycle.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmComplexType.Name">
      <summary> Gets or sets the name of this element. </summary>
      <returns>The name of this element.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmComplexType.Namespace">
      <summary> Gets or sets the namespace of this element. </summary>
      <returns>The namespace of this element.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmComplexType.SchemaElementKind">
      <summary> Gets the schema element kind of this element. </summary>
      <returns>The schema element kind of this element.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmComplexType.SetBaseType(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary> Ensures the new base type is the correct type and sets the base type of the instance. </summary>
      <param name="newBaseType">New base type for this type.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmComplexTypeReference">
      <summary> Represents a reference to an EDM complex type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmComplexTypeReference.#ctor(Microsoft.Data.Edm.IEdmComplexType,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmComplexTypeReference" /> class. </summary>
      <param name="complexType">The type definition this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmConstants">
      <summary> Contains constant values that apply to the EDM model, regardless of source (for CSDL/EDMX specific constants see <see cref="T:Microsoft.Data.Edm.Csdl.CsdlConstants" />). </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.DataServiceVersion">
      <summary> The local name of the annotation that stores the data services version attribute for EDMX serialization. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.DocumentationLocalName">
      <summary> The local name of annotations that will be serialized as documentation elements. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.DocumentationUri">
      <summary> The URI of annotations that will be serialized as documentation elements. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion1">
      <summary> Version 1.0 of EDM. Corresponds to CSDL namespace "http://schemas.microsoft.com/ado/2006/04/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion1_1">
      <summary> Version 1.1 of EDM. Corresponds to CSDL namespace "http://schemas.microsoft.com/ado/2007/05/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion1_2">
      <summary> Version 1.2 of EDM. Corresponds to CSDL namespace "http://schemas.microsoft.com/ado/2008/01/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion2">
      <summary> Version 2.0 of EDM. Corresponds to CSDL namespaces "http://schemas.microsoft.com/ado/2008/09/edm" and "http://schemas.microsoft.com/ado/2009/08/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion2_2">
      <summary> Version 2.2 of EDM. Corresponds to CSDL namespace "http://schemas.microsoft.com/ado/2010/02/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersion3">
      <summary> Version 3.0 of EDM. Corresponds to CSDL namespace "http://schemas.microsoft.com/ado/2009/11/edm". </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.EdmVersionLatest">
      <summary> The current latest version of EDM. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.InternalUri">
      <summary> The URI of annotations that are internal and will not be serialized. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.IsEnumMemberValueExplicit">
      <summary> The local name of the annotation that stores if an enum members value should be serialized explicitly </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.MaxDataServiceVersion">
      <summary> The local name of the annotation that stores the max data services version attribute for EDMX serialization. </summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmConstants.NamespacePrefixLocalName">
      <summary> The local name of the annotation that stores namespace prefixes for serialization. </summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmCoreModel">
      <summary> Provides predefined declarations relevant to EDM semantics. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCoreModel.EntityContainers">
      <summary> Gets the collection of entity containers in this model. </summary>
      <returns>The collection of entity containers in this model.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindAssociation(System.String)">
      <summary> Searches for an association with the given name in this model and returns null if no such association exists. </summary>
      <returns>The requested association, or null if no such association exists.</returns>
      <param name="qualifiedName">The qualified name of the association being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindEntityContainer(System.String)">
      <summary> Searches for an entity container with the given name in this model and returns null if no such entity container exists. </summary>
      <returns>The requested entity container, or null if no such entity container exists.</returns>
      <param name="name">The name of the entity container being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindFunctions(System.String)">
      <summary> Searches for functions with the given name in this model and returns an empty enumerable if no such function exists. </summary>
      <returns>A set functions sharing the specified qualified name, or an empty enumerable if no such function exists.</returns>
      <param name="qualifiedName">The qualified name of the function being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindType(System.String)">
      <summary> Searches for a type with the given name in this model and returns null if no such type exists. </summary>
      <returns>The requested type, or null if no such type exists.</returns>
      <param name="qualifiedName">The qualified name of the type being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindValueTerm(System.String)">
      <summary> Searches for a value term with the given name in this model and returns null if no such value term exists. </summary>
      <returns>The requested value term, or null if no such value term exists.</returns>
      <param name="qualifiedName">The qualified name of the value term being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.FindVocabularyAnnotations(Microsoft.Data.Edm.IEdmAnnotatable)">
      <summary> Searches for vocabulary annotations specified by this model or a referenced model for a given element. </summary>
      <returns>The vocabulary annotations for the element.</returns>
      <param name="element">The annotated element.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetBinary(System.Boolean)">
      <summary> Gets a reference to a binary primitive type definition. </summary>
      <returns>A new binary type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetBinary(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
      <summary> Gets a reference to a binary primitive type definition. </summary>
      <returns>A new binary type reference.</returns>
      <param name="isMaxMaxLength">Flag specifying if max length is the maximum allowable value.</param>
      <param name="maxLength">Maximum length of the type.</param>
      <param name="isFixedLength">Flag specifying if the type will have a fixed length.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetBoolean(System.Boolean)">
      <summary> Gets a reference to the Boolean primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetByte(System.Boolean)">
      <summary> Gets a reference to the Byte primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetCollection(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets a reference to a non-atomic collection type definition. </summary>
      <returns>A new non-atomic collection type reference.</returns>
      <param name="elementType">Type of elements in the collection.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetDecimal(System.Boolean)">
      <summary> Gets a reference to a decimal primitive type definition. </summary>
      <returns>A new decimal type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetDecimal(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
      <summary> Gets a reference to a decimal primitive type definition. </summary>
      <returns>A new decimal type reference.</returns>
      <param name="precision">Precision of values of this type.</param>
      <param name="scale">Scale of values of this type.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetDouble(System.Boolean)">
      <summary> Gets a reference to a double primitive type definition. </summary>
      <returns>A new decimal type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetGuid(System.Boolean)">
      <summary> Gets a reference to the GUID primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetInt16(System.Boolean)">
      <summary> Gets a reference to the Int16 primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetInt32(System.Boolean)">
      <summary> Gets a reference to the Int32 primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetInt64(System.Boolean)">
      <summary> Gets a reference to the Int64 primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetMultiValue(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets a reference to an atomic collection type definition. </summary>
      <returns>A new atomic collection type reference.</returns>
      <param name="elementType">Type of elements in the collection.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetPrimitive(Microsoft.Data.Edm.EdmPrimitiveTypeKind,System.Boolean)">
      <summary> Gets a reference to a primitive type of the specified kind. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="kind">Primitive kind of the type reference being created.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetPrimitiveType(Microsoft.Data.Edm.EdmPrimitiveTypeKind)">
      <summary> Gets primitive type by kind. </summary>
      <returns>Primitive type definition.</returns>
      <param name="kind">Kind of the primitive type.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetPrimitiveTypeKind(System.String)">
      <summary> Gets the <see cref="T:Microsoft.Data.Edm.EdmPrimitiveTypeKind" /> by the type name. </summary>
      <returns>The EdmPrimitiveTypeKind of the type.</returns>
      <param name="typeName">Name of the type to look up.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetSByte(System.Boolean)">
      <summary> Gets a reference to the SByte primitive type definition. </summary>
      <returns>A new primitive type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetSingle(System.Boolean)">
      <summary> Gets a reference to a single primitive type definition. </summary>
      <returns>A new decimal type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetSpatial(Microsoft.Data.Edm.EdmPrimitiveTypeKind,System.Boolean)">
      <summary> Gets a reference to a spatial primitive type definition. </summary>
      <returns>A new spatial type reference.</returns>
      <param name="kind">Primitive kind of the type reference being created.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetSpatial(Microsoft.Data.Edm.EdmPrimitiveTypeKind,System.Nullable{System.Int32},System.Boolean)">
      <summary> Gets a reference to a spatial primitive type definition. </summary>
      <returns>A new spatial type reference.</returns>
      <param name="kind">Primitive kind of the type reference being created.</param>
      <param name="spatialReferenceIdentifier">Spatial Reference Identifier for the spatial type being created.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetStream(System.Boolean)">
      <summary> Gets a reference to a stream primitive type definition. </summary>
      <returns>A new stream type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetString(System.Boolean)">
      <summary> Gets a reference to a binary string type definition. </summary>
      <returns>A new string type reference.</returns>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetString(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Boolean)">
      <summary> Gets a reference to a string primitive type definition. </summary>
      <returns>A new string type reference.</returns>
      <param name="isMaxMaxLength">Flag specifying if maximum length is the maximum allowable value.</param>
      <param name="maxLength">Maximum length of the type.</param>
      <param name="isFixedLength">Flag specifying if the type will have a fixed length.</param>
      <param name="isUnicode">Flag specifying if the type should support unicode encoding.</param>
      <param name="collation">String representing how data should be ordered.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetTemporalType(Microsoft.Data.Edm.EdmPrimitiveTypeKind,System.Boolean)">
      <summary> Gets a reference to a temporal primitive type definition. </summary>
      <returns>A new temporal type reference.</returns>
      <param name="kind">Primitive kind of the type reference being created.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmCoreModel.GetTemporalType(Microsoft.Data.Edm.EdmPrimitiveTypeKind,System.Nullable{System.Int32},System.Boolean)">
      <summary> Gets a reference to a temporal primitive type definition. </summary>
      <returns>A new temporal type reference.</returns>
      <param name="kind">Primitive kind of the type reference being created.</param>
      <param name="precision">Precision of values of this type.</param>
      <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmCoreModel.Instance">
      <summary> The default core EDM model. </summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCoreModel.Namespace">
      <summary> Gets the namespace of this core model. </summary>
      <returns>The namespace of this core model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCoreModel.References">
      <summary> Gets the collection of models referred to by this model. </summary>
      <returns>The collection of models referred to by this model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCoreModel.SchemaElements">
      <summary> Gets the types defined in this core model. </summary>
      <returns>The types defined in this core model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmCoreModel.VocabularyAnnotations">
      <summary> Gets the vocabulary annotations defined in this model. </summary>
      <returns>The vocabulary annotations defined in this model.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmDateTimeOffsetValue">
      <summary> Represents an EDM DateTimeOffset value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDateTimeOffsetValue.#ctor(Microsoft.Data.Edm.IEdmTemporalTypeReference,System.DateTimeOffset)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDateTimeOffsetValue" /> class. </summary>
      <param name="type">Type of the DateTimeOffset.</param>
      <param name="value">DateTimeOffset value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDateTimeOffsetValue.Value">
      <summary> Gets the definition of this value. </summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmDateTimeValue">
      <summary>Represents an EDM date-time value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDateTimeValue.#ctor(Microsoft.Data.Edm.IEdmTemporalTypeReference,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDateTimeValue" /> class. </summary>
      <param name="type">The type of the date-time.</param>
      <param name="value">The date-time value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDateTimeValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmDecimalTypeReference">
      <summary>Represents a reference to an EDM decimal type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDecimalTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDecimalTypeReference" /> class. </summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDecimalTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDecimalTypeReference" /> class. </summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
      <param name="precision">The precision of values with this type.</param>
      <param name="scale">The scale of values with this type.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDecimalTypeReference.Precision">
      <summary>Gets the precision of this type.</summary>
      <returns>The precision of this type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDecimalTypeReference.Scale">
      <summary>Gets the scale of this type.</summary>
      <returns>The scale of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmDecimalValue">
      <summary>Represents an EDM decimal value. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDecimalValue.#ctor(Microsoft.Data.Edm.IEdmDecimalTypeReference,System.Decimal)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDecimalValue" /> class. </summary>
      <param name="type">The type of the decimal.</param>
      <param name="value">The decimal value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDecimalValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmDocumentation">
      <summary>Represents an EDM documentation. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDocumentation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDocumentation" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmDocumentation.#ctor(System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmDocumentation" /> class. </summary>
      <param name="summary">A summary of the documentation.</param>
      <param name="longDescription">A long description of the documentation.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDocumentation.LongDescription">
      <summary>Gets or sets a long description of this documentation.</summary>
      <returns>A long description of this documentation.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmDocumentation.Summary">
      <summary>Gets or sets a summary of this documentation.</summary>
      <returns>A summary of this documentation.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmElement">
      <summary>The common base class for all EDM elements. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmElement.GetAnnotation(System.String,System.String)">
      <summary>Retrieves an annotation value from an EDM element. Returns null if no annotation with the given name exists. </summary>
      <returns>The requested annotation, or null if no such annotation exists.</returns>
      <param name="namespaceName">The namespace of the annotation.</param>
      <param name="localName">The name of the annotation within the namespace.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmElement.ImmediateAnnotations">
      <summary>Gets the annotations associated with this element. </summary>
      <returns>The annotations associated with this element.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmElement.SetAnnotation(System.String,System.String,System.Object)">
      <summary>Sets an annotation value in an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed. </summary>
      <param name="namespaceName">The namespace of the annotation.</param>
      <param name="localName">The name of the annotation within the namespace.</param>
      <param name="value">The value of the new annotation.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntityContainer">
      <summary>Represents an EDM entity container. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.#ctor">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityContainer" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityContainer" /> class. </summary>
      <param name="name">The name of the entity container.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.AddElement(Microsoft.Data.Edm.IEdmEntityContainerElement)">
      <summary>Adds an entity container element to this entity container. </summary>
      <param name="element">The element to add.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityContainer.Elements">
      <summary>Gets a collection of the elements of this entity container. </summary>
      <returns>A collection of the elements of this entity container.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.FindAssociationSet(System.String)">
      <summary>Searches for an association set with the given name in this entity container and returns null if no such set exists. </summary>
      <returns>The requested element, or null if the element does not exist.</returns>
      <param name="setName">The name of the element being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.FindEntitySet(System.String)">
      <summary>Searches for an entity set with the given name in this entity container and returns null if no such set exists. </summary>
      <returns>The requested element, or null if the element does not exist.</returns>
      <param name="setName">The name of the element being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.FindFunctionImports(System.String)">
      <summary>Searches for function imports with the given name in this entity container and returns null if no such function import exists. </summary>
      <returns>A group of the requested function imports, or null if no such function import exists.</returns>
      <param name="functionName">The name of the function import being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityContainer.Name">
      <summary>Gets or sets the name of this entity container. </summary>
      <returns>The name of this entity container.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityContainer.RemoveElement(Microsoft.Data.Edm.IEdmEntityContainerElement)">
      <summary>Removes an entity container element from this entity container. </summary>
      <param name="element">The element to remove.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntityReferenceType">
      <summary>Represents a definition of an EDM entity reference type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityReferenceType.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityReferenceType" /> class. </summary>
      <param name="entityType">The entity referred to by this entity reference.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityReferenceType.EntityType">
      <summary>Gets the entity type pointed to by this entity reference. </summary>
      <returns>The entity type pointed to by this entity reference.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntityReferenceTypeReference">
      <summary>Represents a reference to an EDM entity reference type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityReferenceTypeReference.#ctor(Microsoft.Data.Edm.IEdmEntityReferenceType,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityReferenceTypeReference" /> class. </summary>
      <param name="entityReferenceType">The definition referred to by this reference.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityReferenceTypeReference.EntityReferenceDefinition">
      <summary>Gets the entity reference definition to which this type refers. </summary>
      <returns>The entity reference definition to which this type refers.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntitySet">
      <summary>Represents an EDM entity set. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntitySet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntitySet" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntitySet.#ctor(System.String,Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntitySet" /> class. </summary>
      <param name="name">The name of the entity set.</param>
      <param name="elementType">The entity type of the elements in this entity set.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntitySet.AddNavigationTarget(Microsoft.Data.Edm.Library.EdmNavigationProperty,Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Adds a navigation target that specifies the destination entity set of a navigation property of an entity in this entity set. </summary>
      <param name="property">The navigation property the target is being set for.</param>
      <param name="target">The destination entity set of the specified navigation property.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntitySet.AssociationSets">
      <summary>Gets the collection of entity sets related to this entity set. </summary>
      <returns>The collection of entity sets related to this entity set.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntitySet.ContainerElementKind">
      <summary>Gets the kind of element of this container element. </summary>
      <returns>The kind of element of this container element.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntitySet.ElementType">
      <summary>Gets or sets the entity type contained in this entity set. </summary>
      <returns>The entity type contained in this entity set.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntitySet.Name">
      <summary>Gets or sets the name of the entity set. </summary>
      <returns>The name of the entity set.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntitySet.RemoveNavigationTarget(Microsoft.Data.Edm.Library.EdmNavigationProperty)">
      <summary>Removes a navigation target which specified the destination entity set of a navigation property of an entity in this entity set. </summary>
      <param name="property">The navigation property the target is being removed from.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntityType">
      <summary>Represents a definition of an EDM entity type. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityType" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.#ctor(System.Boolean,System.Boolean,Microsoft.Data.Edm.IEdmEntityType,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmStructuralProperty})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityType" /> class. </summary>
      <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
      <param name="isOpen">Denotes if the type is open.</param>
      <param name="baseType">The base type of this entity type.</param>
      <param name="namespaceName">The namespace the entity belongs to.</param>
      <param name="name">The name of the entity.</param>
      <param name="key">The key of the entity.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.#ctor(System.Boolean,System.Boolean,Microsoft.Data.Edm.IEdmEntityType,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmStructuralProperty})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityType" /> class. </summary>
      <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
      <param name="isOpen">Denotes if the type is open.</param>
      <param name="baseType">The base type of this entity type.</param>
      <param name="namespaceName">The namespace the entity belongs to.</param>
      <param name="namespaceUri">The URI of the namespace to which the entity belongs.</param>
      <param name="name">The name of the entity.</param>
      <param name="key">The key of the entity.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.ComputeCycleBaseType">
      <summary>Computes the type to return if a cycle is detected in the base type hierarchy. </summary>
      <returns>A bad type to stand in for the base type in case of a cycle.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.DeclaredKey">
      <summary>Gets or sets the structural properties of the entity type that make up the entity key. </summary>
      <returns>The structural properties of the entity type that make up the entity key.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.Name">
      <summary>Gets or sets the name of this element. </summary>
      <returns>The name of this element.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.Namespace">
      <summary>Gets or sets the namespace this schema element belongs to. </summary>
      <returns>The namespace this schema element belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.NamespaceUri">
      <summary>Gets or sets the namespace URI of this entity type. </summary>
      <returns>The namespace URI of this entity type.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.RemoveProperty(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Removes a property from this type. </summary>
      <param name="property">The property being removed.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.SchemaElementKind">
      <summary>Gets the kind of this schema element. </summary>
      <returns>The kind of this schema element.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityType.SetBaseType(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Ensures the new base type is the correct type and sets the base type of the instance. </summary>
      <param name="newBaseType">The new base type for this type.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmEntityType.TermKind">
      <summary>Gets the term kind of the entity type. </summary>
      <returns>The term kind of the entity type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEntityTypeReference">
      <summary>Represents a reference to an EDM entity type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEntityTypeReference.#ctor(Microsoft.Data.Edm.IEdmEntityType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEntityTypeReference" /> class.</summary>
      <param name="entityType">The definition refered to by this reference.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmEnumTypeReference">
      <summary>Represents a reference to an EDM enumeration type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmEnumTypeReference.#ctor(Microsoft.Data.Edm.IEdmEnumType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmEnumTypeReference" />class.</summary>
      <param name="enumType">The definition refered to by this reference.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmFloatingValue">
      <summary>Represents an EDM floating point value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFloatingValue.#ctor(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Double)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFloatingValue" /> class.</summary>
      <param name="type">Type of the floating point.</param>
      <param name="value">Floating point value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFloatingValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmFunction">
      <summary>Represents an EDM function.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunction.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunction.#ctor(System.String,System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunction" /> class.</summary>
      <param name="namespaceName">Namespace of the function.</param>
      <param name="name">Name of the function.</param>
      <param name="returnType">Return type of the function.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunction.DefiningExpression">
      <summary>Gets or sets the defining expression of this function.</summary>
      <returns>The defining expression of this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunction.Namespace">
      <summary>Gets or sets the namespace of this function.</summary>
      <returns>The namespace of this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunction.SchemaElementKind">
      <summary>Gets the element kind of this function, which is always Function.</summary>
      <returns>The element kind of this function.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmFunctionBase">
      <summary>Represents an EDM function or function import.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunctionBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.#ctor(System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunctionBase" /> class.</summary>
      <param name="name">The name of the function.</param>
      <param name="returnType">The return type of the function.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.AddParameter(Microsoft.Data.Edm.IEdmFunctionParameter)">
      <summary>Adds a parameter to this function (as the last parameter).</summary>
      <param name="parameter">The parameter being added.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.AddParameter(System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Adds a parameter to this function (as the last parameter).</summary>
      <param name="name">The name of the parameter being added.</param>
      <param name="type">The type of the parameter being added.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.FindParameter(System.String)">
      <summary>Searches for a parameter with the given name in this function and returns null if no such parameter exists.</summary>
      <returns>The requested parameter, or null if no such parameter exists.</returns>
      <param name="name">The name of the parameter to be found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionBase.Name">
      <summary>Gets or sets the name of this function.</summary>
      <returns>The name of this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionBase.Parameters">
      <summary>Gets the parameters of this function.</summary>
      <returns>The parameters of this function.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionBase.RemoveParameter(Microsoft.Data.Edm.IEdmFunctionParameter)">
      <summary>Removes a parameter from this function.</summary>
      <param name="parameter">The parameter being removed.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionBase.ReturnType">
      <summary>Gets or sets the return type of this function.</summary>
      <returns>The return type of this function.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmFunctionImport">
      <summary>Represents an EDM function import.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionImport.#ctor(System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunctionImport" /> class.</summary>
      <param name="name">Name of the function.</param>
      <param name="returnType">Return type of the function.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.Bindable">
      <summary>Gets or sets a value indicating whether this function import can be used as an extension method for the type of the first parameter of this function import.</summary>
      <returns>True if this function import is bindable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.Composable">
      <summary>Gets or sets a value indicating whether this functon import can be composed inside expressions. <see cref="P:Microsoft.Data.Edm.Library.EdmFunctionImport.Composable" /> cannot be set to true if <see cref="P:Microsoft.Data.Edm.Library.EdmFunctionImport.Composable" /> is set to true.</summary>
      <returns>True if this function import can be composed inside expressions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.ContainerElementKind">
      <summary>Gets the kind of this function, which is always FunctionImport.</summary>
      <returns>The kind of this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.EntitySet">
      <summary>Gets or sets the entity set of this function.</summary>
      <returns>The entity set of this function.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.EntitySetPath">
      <summary>Gets or sets the entity set path of the function import.</summary>
      <returns>The entity set path of the function import.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionImport.SideEffecting">
      <summary>Gets or sets a value indicating whether this function import has side-effects. <see cref="P:Microsoft.Data.Edm.Library.EdmFunctionImport.SideEffecting" /> cannot be set to true if <see cref="P:Microsoft.Data.Edm.Library.EdmFunctionImport.SideEffecting" /> is set to true.</summary>
      <returns>True if this function import has side effects; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmFunctionParameter">
      <summary>Represents an EDM function parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionParameter.#ctor(System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunctionParameter" /> class.</summary>
      <param name="name">Name of the parameter.</param>
      <param name="type">Type of the parameter.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmFunctionParameter.#ctor(System.String,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.Edm.EdmFunctionParameterMode)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmFunctionParameter" /> class.</summary>
      <param name="name">Name of the parameter.</param>
      <param name="type">Type of the parameter.</param>
      <param name="mode">Mode of the parameter.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionParameter.Mode">
      <summary>Gets the mode of this parameter.</summary>
      <returns>The mode of this parameter.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmFunctionParameter.Type">
      <summary>Gets the type of this parameter.</summary>
      <returns>The type of this parameter.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmGuidValue">
      <summary>Represents an EDM Guid value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmGuidValue.#ctor(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Guid)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmGuidValue" /> class.</summary>
      <param name="type">Type of the integer.</param>
      <param name="value">Integer value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmGuidValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation">
      <summary>Represents an EDM annotation with an immediate value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation.#ctor(System.String,System.String,System.Object)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation" /> class.</summary>
      <param name="namespaceName">Namespace of the annotation.</param>
      <param name="localName">Name of the annotation within the namespace.</param>
      <param name="value">Value of the annotation.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation.AnnotationKind">
      <summary>Gets the kind of this annotation.</summary>
      <returns>The kind of this annotation.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation.Term">
      <summary>Gets the term of this annotation.</summary>
      <returns>The term of this annotation.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmImmediateValueAnnotation.Value">
      <summary>Gets the value of this annotation.</summary>
      <returns>The value of this annotation.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmIntegerValue">
      <summary>Represents an EDM integer value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmIntegerValue.#ctor(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Int64)">
      <summary> Initializes a new instance of the EdmIntegerValue class. </summary>
      <param name="type">Type of the integer.</param>
      <param name="value">Integer value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmIntegerValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmModel">
      <summary>Represents an EDM model.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModel.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmModel" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModel.AddElement(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Adds a schema element to this model.</summary>
      <param name="element">The element to be added.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModel.AddElements(System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmSchemaElement})">
      <summary>Adds a collection of schema elements to this model.</summary>
      <param name="newElements">The elements to be added.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModel.RemoveElement(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Removes a schema element from this model.</summary>
      <param name="element">The element to be removed.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModel.RemoveEntityContainer(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary>Removes an entity container from this model.</summary>
      <param name="container">The container to be removed.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModel.SchemaElements">
      <summary>Gets the collection of schema elements that are contained in this model.</summary>
      <returns>The collection of schema elements.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmModelBase">
      <summary>Represents an EDM model.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmModel})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmModelBase" /> class.</summary>
      <param name="references">The Models to which this model refers.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.AddEntityContainer(Microsoft.Data.Edm.IEdmEntityContainer)">
      <summary>Adds an entity container to this model.</summary>
      <param name="container">The entity container to add.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.ContainersDictionary">
      <summary>Gets a dictionary of entity containers contained in this model.</summary>
      <returns>A dictionary of entity containers contained in this model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.EntityContainers">
      <summary>Gets the collection of entity containers in this model.</summary>
      <returns>The collection of entity containers in this model.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.EntityContainersList">
      <summary>Gets the collection of entity containers contained in this model.</summary>
      <returns>The collection of entity containers contained in this model.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindAssociation(System.String)">
      <summary>Searches for an association with the given name in this model and returns null if no such association exists.</summary>
      <returns>The requested association, or null if no such type exists.</returns>
      <param name="qualifiedName">The qualified name of the type being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindEntityContainer(System.String)">
      <summary>Searches for an entity container with the given name in this model and returns null if no such entity container exists.</summary>
      <returns>The requested entity container, or null if no such entity container exists.</returns>
      <param name="name">The name of the entity container being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindFunctions(System.String)">
      <summary>Searches for a function with the given name in this model and returns null if no such function exists.</summary>
      <returns>A group of functions sharing the specified qualified name, or an empty enumerable if no such function exists.</returns>
      <param name="qualifiedName">The qualified name of the function being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindType(System.String)">
      <summary>Searches for a type with the given name in this model and returns null if no such type exists.</summary>
      <returns>The requested type, or null if no such type exists.</returns>
      <param name="qualifiedName">The qualified name of the type being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindValueTerm(System.String)">
      <summary>Searches for a value term with the given name in this model and returns null if no such value term exists.</summary>
      <returns>The requested value term, or null if no such value term exists.</returns>
      <param name="qualifiedName">The qualified name of the value term being found.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.FindVocabularyAnnotations(Microsoft.Data.Edm.IEdmAnnotatable)">
      <summary>Searches for vocabulary annotations specified by this model or a referenced model for a given element.</summary>
      <returns>The vocabulary annotations for the element.</returns>
      <param name="element">The annotated element.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.References">
      <summary>Gets the collection of models referred to by this model.</summary>
      <returns>The collection of models referred to by this model.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.RegisterElement(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Adds a schema element to this model.</summary>
      <param name="element">The element to register.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.SchemaElements">
      <summary>Gets the collection of schema elements that are contained in this model.</summary>
      <returns>The collection of schema elements that are contained in this model.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmModelBase.UnregisterElement(Microsoft.Data.Edm.IEdmSchemaElement)">
      <summary>Removes a schema element from this model.</summary>
      <param name="element">The element to deregister.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmModelBase.VocabularyAnnotations">
      <summary>Gets the collection of vocabulary annotations that are contained in this model.</summary>
      <returns>The collection of vocabulary annotations that are contained in this model.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmNamedElement">
      <summary>Represents a common base class for all named EDM elements.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmNamedElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmNamedElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmNamedElement.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmNamedElement" /> class.</summary>
      <param name="name">The name of the element.</param>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmNamedElement.elementName">
      <summary>The name of the element.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNamedElement.Name">
      <summary>Gets the name of this element.</summary>
      <returns>The name of this element.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmNavigationProperty">
      <summary>Represents an EDM navigation property.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmNavigationProperty.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmNavigationProperty" /> class.</summary>
      <param name="declaringType">The type that declares this navigation property.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmNavigationProperty.#ctor(Microsoft.Data.Edm.IEdmEntityType,System.String,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.Edm.EdmOnDeleteAction)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmNavigationProperty" /> class.</summary>
      <param name="declaringType">The type that declares this navigation property.</param>
      <param name="name">Name of the navigation property.</param>
      <param name="type">Type that this navigation property points to.</param>
      <param name="onDelete">Action to take upon deleting the declaring type.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.DeclaringEntityType">
      <summary>Gets the entity type that this navigation property belongs to.</summary>
      <returns>The entity type that this navigation property belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.DependentProperties">
      <summary>Gets or sets the dependent properties of the association this navigation property expresses.</summary>
      <returns>The dependent properties of the association this navigation property expresses.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.IsFromPrincipal">
      <summary>Gets a value indicating whether this navigation property is from the principal end of the association.</summary>
      <returns>True if the navigation property is from the principal end of the association; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.Microsoft#Data#Edm#IEdmAssociationEnd#DeclaringAssociation">
      <summary>Gets the declaring association for this navigation property.</summary>
      <returns>The declaring association for this navigation property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.Microsoft#Data#Edm#IEdmAssociationEnd#EntityType">
      <summary>Gets the entity type for this navigation property.</summary>
      <returns>The entity type for this navigation property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.Microsoft#Data#Edm#IEdmAssociationEnd#Multiplicity">
      <summary>Gets the multiplicity for this navigation property.</summary>
      <returns>The multiplicity for this navigation property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.Microsoft#Data#Edm#IEdmNavigationProperty#To">
      <summary>Gets the destination target for this navigation property.</summary>
      <returns>The destination target for this navigation property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.OnDelete">
      <summary>Gets or sets the action to take when an element of the defining type is deleted.</summary>
      <returns>The action to take when an element of the defining type is deleted.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.Partner">
      <summary>Gets or sets the navigation property from this properties destination back to the declaring type of this property.</summary>
      <returns>The navigation property from this properties destination back to the declaring type of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmNavigationProperty.PropertyKind">
      <summary>Gets the kind of this property.</summary>
      <returns>The kind of this property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmPrimitiveTypeReference">
      <summary>Represents a reference to an EDM primitive type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmPrimitiveTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmPrimitiveTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmProperty">
      <summary>Represents an EDM property.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmProperty.#ctor(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmProperty" /> class.</summary>
      <param name="declaringType">The type that declares this property.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmProperty.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmProperty" /> class.</summary>
      <param name="declaringType">The type that declares this property.</param>
      <param name="name">Name of the property.</param>
      <param name="type">Type of the property.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmProperty.DeclaringType">
      <summary>Gets the type that this property belongs to.</summary>
      <returns>The type that this property belongs to.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmProperty.Name">
      <summary>Gets or sets the name of this property.</summary>
      <returns>The name of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmProperty.PropertyKind">
      <summary>Gets the kind of this property.</summary>
      <returns>The kind of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmProperty.Type">
      <summary>Gets or sets the type of this property.</summary>
      <returns>The type of this property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmPropertyValue">
      <summary>Represents a value of an EDM property.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmPropertyValue.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.Edm.IEdmValue)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmPropertyValue" /> class.</summary>
      <param name="property">Property describing the this value.</param>
      <param name="value">Value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmPropertyValue.Property">
      <summary>Gets the property that corresponds to this property value.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmPropertyValue.Value">
      <summary>Gets the definition of this value.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmRowType">
      <summary>Represents a definition of an EDM row type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmRowType.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmRowType" />class.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmRowType.SetBaseType(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Ensures the new base type is the correct type and sets the base type of the instance.</summary>
      <param name="newBaseType">New base type for this type.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmRowTypeReference">
      <summary>Represents a reference to an EDM row type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmRowTypeReference.#ctor(Microsoft.Data.Edm.IEdmRowType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmRowTypeReference" /> class.</summary>
      <param name="rowType">Type that describes this value.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmRowValue">
      <summary>Represents an EDM row value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmRowValue.#ctor(Microsoft.Data.Edm.IEdmRowTypeReference,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmPropertyValue})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmRowValue" />class.</summary>
      <param name="type">Row type that describes this value.</param>
      <param name="propertyValues">Collection of child values.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmSpatialTypeReference">
      <summary>Represents a reference to an EDM spatial type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmSpatialTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmSpatialTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmSpatialTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmSpatialTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
      <param name="spatialReferenceIdentifier">Spatial Reference Identifier for the spatial type being created.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmSpatialTypeReference.SpatialReferenceIdentifier">
      <summary>Gets the precision of this temporal type.</summary>
      <returns>The precision of this temporal type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmStringTypeReference">
      <summary>Represents a reference to an EDM string type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStringTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStringTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStringTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStringTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
      <param name="isMaxMaxLength">Denotes whether the max length is the maximum allowed value.</param>
      <param name="maxLength">Maximum length of a value of this type.</param>
      <param name="isFixedLength">Denotes whether the length can vary.</param>
      <param name="isUnicode">Denotes if string is encoded using Unicode.</param>
      <param name="collation">Indicates the collation string to be used by the underlying store.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringTypeReference.Collation">
      <summary>Gets a string representing the collation of this string type.</summary>
      <returns>The collation of this string type.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringTypeReference.IsFixedLength">
      <summary>Gets a value indicating whether this string type specifies fixed length.</summary>
      <returns>True if this string type specifies fixed length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringTypeReference.IsMaxMaxLength">
      <summary>Gets a value indicating whether this string type specifies the maximum allowed max length.</summary>
      <returns>True if this string type specifies the maximum allowed max length; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringTypeReference.IsUnicode">
      <summary>Gets a value indicating whether this string type supports unicode encoding.</summary>
      <returns>True if this string type supports Unicode encoding; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringTypeReference.MaxLength">
      <summary>Gets the maximum length of this string type.</summary>
      <returns>The maximum length of this string type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmStringValue">
      <summary>Represents an EDM string value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStringValue.#ctor(Microsoft.Data.Edm.IEdmStringTypeReference,System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStringValue" /> class. </summary>
      <param name="type">Type of the string.</param>
      <param name="value">String value represented by this value.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStringValue.Value">
      <summary>Gets the definition of this value.</summary>
      <returns>The definition of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmStructuralProperty">
      <summary>Represents an EDM structural (i.e. non-navigation) property.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuralProperty.#ctor(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStructuralProperty" /> class.</summary>
      <param name="declaringType">The type that declares this property.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuralProperty.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.String,Microsoft.Data.Edm.IEdmTypeReference,System.String,Microsoft.Data.Edm.EdmConcurrencyMode)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStructuralProperty" /> class.</summary>
      <param name="declaringType">The type that declares this property.</param>
      <param name="name">The name of the property.</param>
      <param name="type">The type of the property.</param>
      <param name="defaultValue">The default value of this property.</param>
      <param name="concurrencyMode">The concurrency mode of this property.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuralProperty.ConcurrencyMode">
      <summary>Gets the concurrency mode of this property.</summary>
      <returns>The concurrency mode of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuralProperty.DefaultValue">
      <summary>Gets the default value of this property.</summary>
      <returns>The default value of this property.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuralProperty.PropertyKind">
      <summary>Gets the kind of this property.</summary>
      <returns>The kind of this property.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmStructuredType">
      <summary>Represents a common base class for definitions of EDM structured types.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.#ctor(Microsoft.Data.Edm.EdmTypeKind)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStructuredType" /> class.</summary>
      <param name="kind">The kind of the type definition.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.#ctor(Microsoft.Data.Edm.EdmTypeKind,System.Boolean,System.Boolean,Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStructuredType" /> class.</summary>
      <param name="kind">The kind of the type definition.</param>
      <param name="isAbstract">Denotes a structured type that cannot be instantiated.</param>
      <param name="isOpen">Denotes if the type is open.</param>
      <param name="baseStructuredType">Base type of the type.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.AddProperty(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Adds the property to this type. <see cref="P:Microsoft.Data.Edm.IEdmProperty.DeclaringType" /> of the property must be this type. </summary>
      <param name="property">The property being added.</param>
    </member>
    <member name="F:Microsoft.Data.Edm.Library.EdmStructuredType.baseStructuredType">
      <summary>Intended base type of this type.</summary>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredType.BaseType">
      <summary>Gets or sets the base type of this type.</summary>
      <returns>The base type of this type.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.ComputeCycleBaseType">
      <summary>Computes the type to return if a cycle is detected in the base type hierarchy.</summary>
      <returns>The bad type to stand in for the base type in case of a cycle.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.ComputePropertiesDictionary">
      <summary>Computes the cached dictionary of properties for this type definition.</summary>
      <returns>The dictionary of properties keyed by their name.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredType.DeclaredProperties">
      <summary>Gets the properties declared immediately within this type.</summary>
      <returns>The properties declared immediately within this type.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.FindProperty(System.String)">
      <summary>Searches for a structural or navigation property with the given name in this type and all base types and returns null if no such property exists.</summary>
      <returns>The requested property, or null if no such property exists.</returns>
      <param name="name">The name of the property being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredType.IsAbstract">
      <summary>Gets or sets a value indicating whether this type is abstract.</summary>
      <returns>True if this type is abstract; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredType.IsOpen">
      <summary>Gets or sets a value indicating whether this type is open.</summary>
      <returns>True if this type is open; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredType.PropertiesDictionary">
      <summary>Gets a dictionary of the properties in this type definition for faster lookup.</summary>
      <returns>A dictionary of the properties in this type definition for faster lookup.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.RemoveProperty(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Removes a property from this type.</summary>
      <param name="property">The property being removed.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredType.SetBaseType(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Ensures the new base type is the correct type and sets the base type of the instance.</summary>
      <param name="newBaseType">The new base type for this type.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmStructuredValue">
      <summary>Represents an EDM structured value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredValue.#ctor(Microsoft.Data.Edm.IEdmStructuredTypeReference,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmPropertyValue})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmStructuredValue" /> class.</summary>
      <param name="type">The type that describes this value.</param>
      <param name="propertyValues">The child values of this value.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmStructuredValue.FindPropertyValue(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Retrieves the value corresponding to the given property. Returns null if no such value exists.</summary>
      <returns>The requested value, or null if no such value exists.</returns>
      <param name="property">The property that describes the value being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmStructuredValue.PropertyValues">
      <summary>Gets the property values of this structured value.</summary>
      <returns>The property values of this structured value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmTemporalTypeReference">
      <summary>Represents a reference to an EDM temporal (Time, DateTime, DateTimeOffset) type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTemporalTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmTemporalTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTemporalTypeReference.#ctor(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmTemporalTypeReference" /> class.</summary>
      <param name="definition">The type this reference refers to.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
      <param name="precision">Precision of values with this type.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmTemporalTypeReference.Precision">
      <summary>Gets the precision of this temporal type.</summary>
      <returns>The precision of this temporal type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmTermName">
      <summary>Represents a URI-based qualified name.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTermName.#ctor(System.String,System.String)">
      <summary>Creates new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmTermName" /> class.</summary>
      <param name="namespaceName">The namespace of the item.</param>
      <param name="localName">The name of the item within the namespace.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmTermName.LocalName">
      <summary>Gets the name of the item within the namespace.</summary>
      <returns>The name of the item within the namespace.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmTermName.Namespace">
      <summary>Gets the namespace of the item.</summary>
      <returns>The namespace of the item.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmType">
      <summary>Represents the definition of an EDM type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmType.#ctor(Microsoft.Data.Edm.EdmTypeKind)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmType" /> class.</summary>
      <param name="kind">The kind of the type definition.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmType.ToString">
      <summary>Returns the text representation of the current object.</summary>
      <returns>The text representation of the current object.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmType.TypeKind">
      <summary>Gets the kind of this type.</summary>
      <returns>The kind of this type.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmTypeReference">
      <summary>Represents a reference to an EDM type.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeReference.#ctor(Microsoft.Data.Edm.IEdmType,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmTypeReference" /> class.</summary>
      <param name="definition">The type that describes this value.</param>
      <param name="isNullable">Denotes whether the type can be nullable.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmTypeReference.Definition">
      <summary>Gets the definition to which this type refers.</summary>
      <returns>The definition to which this type refers.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmTypeReference.IsNullable">
      <summary>Gets a value indicating whether this type is nullable.</summary>
      <returns>True if this type is nullable; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeReference.ToString">
      <summary>Returns the text representation of the current object.</summary>
      <returns>The text representation of the current object.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmTypeSemantics">
      <summary>Provides semantics of the predefined EDM types.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.ApplyType(Microsoft.Data.Edm.IEdmRowType,System.Boolean)">
      <summary>Returns a reference to this row type definition.</summary>
      <returns>A reference to this row type definition.</returns>
      <param name="rowType">The reference to the calling object.</param>
      <param name="isNullable">The flag specifying if the referenced type should be nullable.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsBinary(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a binary type, this will return a valid binary type reference to the type definition. Otherwise, it will return a bad binary type reference.</summary>
      <returns>A valid binary type reference if the definition of the reference is of a binary type. Otherwise a bad binary type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsCollection(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a collection type, this will return a valid collection type reference to the type definition. Otherwise, it will return a bad collection type reference.</summary>
      <returns>A valid collection type reference if the definition of the reference is of a collection type. Otherwise a bad collection type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsComplex(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a complex type, this will return a valid complex type reference to the type definition. Otherwise, it will return a bad complex type reference.</summary>
      <returns>A valid complex type reference if the definition of the reference is of a complex type. Otherwise a bad complex type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsDecimal(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a decimal type, this will return a valid decimal type reference to the type definition. Otherwise, it will return a bad decimal type reference.</summary>
      <returns>A valid decimal type reference if the definition of the reference is of a decimal type. Otherwise a bad decimal type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsEntity(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of an entity type, this will return a valid entity type reference to the type definition. Otherwise, it will return a bad entity type reference.</summary>
      <returns>A valid entity type reference if the definition of the reference is of an entity type. Otherwise a bad entity type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsEntityReference(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of an entity reference type, this will return a valid entity reference type reference to the type definition. Otherwise, it will return a bad entity reference type reference.</summary>
      <returns>A valid entity reference type reference if the definition of the reference is of an entity reference type. Otherwise a bad entity reference type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsEnum(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of an enumeration type, this will return a valid enumeration type reference to the type definition. Otherwise, it will return a bad enumeration type reference.</summary>
      <returns>A valid enumeration type reference if the definition of the reference is of an enumeration type. Otherwise a bad enumeration type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsPrimitive(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a primitive type, this will return a valid primitive type reference to the type definition. Otherwise, it will return a bad primitive type reference.</summary>
      <returns>A valid primitive type reference if the definition of the reference is of a primitive type. Otherwise a bad primitive type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsRow(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a row type, this will return a valid row type reference to the type definition. Otherwise, it will return a bad row type reference.</summary>
      <returns>A valid row type reference if the definition of the reference is of a row type. Otherwise a bad row type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsSpatial(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a spatial type, this will return a valid spatial type reference to the type definition. Otherwise, it will return a bad spatial type reference.</summary>
      <returns>A valid spatial type reference if the definition of the reference is of a spatial type. Otherwise a bad spatial type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsString(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a string type, this will return a valid string type reference to the type definition. Otherwise, it will return a bad string type reference.</summary>
      <returns>A valid string type reference if the definition of the reference is of a string type. Otherwise a bad string type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsStructured(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a structured type, this will return a valid structured type reference to the type definition. Otherwise, it will return a bad structured type reference.</summary>
      <returns>A valid structured type reference if the definition of the reference is of a structured type. Otherwise a bad structured type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.AsTemporal(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>If this reference is of a temporal type, this will return a valid temporal type reference to the type definition. Otherwise, it will return a bad temporal type reference.</summary>
      <returns>A valid temporal type reference if the definition of the reference is of a temporal type. Otherwise a bad temporal type reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.InheritsFrom(Microsoft.Data.Edm.IEdmStructuredType,Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Determines if the potential base type is in the inheritance hierarchy of the type being tested.</summary>
      <returns>True if the type inherits from the potential base type; otherwise, false.</returns>
      <param name="type">The reference to the calling object.</param>
      <param name="potentialBaseType">The potential base type of the type being tested.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsBinary(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a binary type.</summary>
      <returns>This reference refers to a binary type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsBoolean(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a boolean type.</summary>
      <returns>This reference refers to a boolean type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsByte(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a byte type.</summary>
      <returns>This reference refers to a byte type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsCollection(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a collection.</summary>
      <returns>This reference refers to a collection.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsComplex(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a complex type.</summary>
      <returns>This reference refers to a complex type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsDateTime(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a DateTime type.</summary>
      <returns>This reference refers to a DateTime type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsDateTimeOffset(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a DateTimeOffset type.</summary>
      <returns>This reference refers to a DateTimeOffset type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsDecimal(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a decimal type.</summary>
      <returns>This reference refers to a decimal type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsDouble(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a double type.</summary>
      <returns>This reference refers to a double type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEntity(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an entity type.</summary>
      <returns>This reference refers to an entity type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEntityReference(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an entity type.</summary>
      <returns>This reference refers to an entity type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEnum(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an enumeration type.</summary>
      <returns>This reference refers to an enumeration type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEquivalentTo(Microsoft.Data.Edm.IEdmFunction,Microsoft.Data.Edm.IEdmFunction)">
      <summary>Returns true if the compared function is semantically equivalent to this function.</summary>
      <returns>The equivalence of the two functions.</returns>
      <param name="thisFunction">The reference to the calling object.</param>
      <param name="otherFunction">The function being compared to.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEquivalentTo(Microsoft.Data.Edm.IEdmFunctionImport,Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Returns true if the compared function import is semantically equivalent to this function import.</summary>
      <returns>The equivalence of the two function imports.</returns>
      <param name="thisFunction">The reference to the calling object.</param>
      <param name="otherFunction">The function import being compared to.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEquivalentTo(Microsoft.Data.Edm.IEdmType,Microsoft.Data.Edm.IEdmType)">
      <summary>Returns true if the compared type is semantically equivalent to this type.</summary>
      <returns>The equivalence of the two types.</returns>
      <param name="thisType">The reference to the calling object.</param>
      <param name="otherType">The type being compared to.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsEquivalentTo(Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if the compared type is semantically equivalent to this type.</summary>
      <returns>The equivalence of the two types.</returns>
      <param name="thisType">The reference to the calling object.</param>
      <param name="otherType">The type being compared to.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsFloating(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a floating point type.</summary>
      <returns>This reference refers to a floating point type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsGuid(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a GUID type.</summary>
      <returns>This reference refers to a GUID type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsInt16(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an Int16 type.</summary>
      <returns>This reference refers to an Int16 type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsInt32(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an Int32 type.</summary>
      <returns>This reference refers to an Int32 type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsInt64(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an Int64 type.</summary>
      <returns>This reference refers to an Int64 type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsPrimitive(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a primitive type.</summary>
      <returns>This reference refers to a primitive type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsRow(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a row type.</summary>
      <returns>This reference refers to a row type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsSByte(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to an SByte type.</summary>
      <returns>This reference refers to an SByte type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsSignedIntegral(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a signed integral type.</summary>
      <returns>This reference refers to a signed integral type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsSingle(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a single type.</summary>
      <returns>This reference refers to a single type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsSpatial(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a spatial type.</summary>
      <returns>This reference refers to a spatial type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsStream(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a stream type.</summary>
      <returns>This reference refers to a stream type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsString(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a string type.</summary>
      <returns>This reference refers to a string type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsStructured(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a structured type.</summary>
      <returns>This reference refers to a structured type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsTemporal(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a temporal type.</summary>
      <returns>This reference refers to a temporal type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.IsTime(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns true if this reference refers to a time type.</summary>
      <returns>This reference refers to a time type.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.PrimitiveKind(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns the primitive kind of the definition of this reference.</summary>
      <returns>The primitive kind of the definition of this reference.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.ToTraceString(Microsoft.Data.Edm.IEdmType)">
      <summary>Returns the text representation of the current object.</summary>
      <returns>The text representation of the current object.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmTypeSemantics.ToTraceString(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns the text representation of the current object.</summary>
      <returns>The text representation of the current object.</returns>
      <param name="type">The reference to the calling object.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmValue">
      <summary>Represents an EDM value.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmValue.#ctor(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmValue" /> class.</summary>
      <param name="type">The type of the value.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmValue.GetAnnotation(System.String,System.String)">
      <summary>Retrieves an annotation value from an EDM element. Returns null if no annotation with the given name exists.</summary>
      <returns>The requested annotation, or null if no such annotation exists.</returns>
      <param name="namespaceName">The namespace of the annotation.</param>
      <param name="localName">The name of the annotation within the namespace.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValue.ImmediateAnnotations">
      <summary>Gets the collection of annotations on this element.</summary>
      <returns>The collection of annotations on this element.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmValue.SetAnnotation(System.String,System.String,System.Object)">
      <summary>Sets an annotation value in an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed.</summary>
      <param name="namespaceName">The namespace of the annotation.</param>
      <param name="localName">The name of the annotation within the namespace.</param>
      <param name="value">The value of the new annotation.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValue.Type">
      <summary>Gets the type of this value.</summary>
      <returns>The type of this value.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Library.EdmValueTerm">
      <summary>Represents an EDM value term.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmValueTerm.#ctor(System.String,System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmValueTerm" /> class.</summary>
      <param name="namespaceName">The namespace of the term.</param>
      <param name="namespaceUri">The namespace URI of the term.</param>
      <param name="localName">The name of the term within the namespace.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Library.EdmValueTerm.#ctor(System.String,System.String,System.String,Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Library.EdmValueTerm" /> class.</summary>
      <param name="namespaceName">The namespace of the term.</param>
      <param name="namespaceUri">The namespace URI of the term.</param>
      <param name="localName">The name of the term within the namespace.</param>
      <param name="type">The type of the term.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.Name">
      <summary>Gets the local name of this term.</summary>
      <returns>The local name of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.Namespace">
      <summary>Gets the namespace of this term.</summary>
      <returns>The namespace of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.NamespaceUri">
      <summary>Gets the namespace URI of this term.</summary>
      <returns>The namespace URI of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.SchemaElementKind">
      <summary>Gets the schema element kind of this term.</summary>
      <returns>The schema element kind of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.TermKind">
      <summary>Gets the kind of this term.</summary>
      <returns>The kind of this term.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Library.EdmValueTerm.Type">
      <summary>Gets the type of this term.</summary>
      <returns>The type of this term.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.EdmError">
      <summary>Represents a reportable error in EDM.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.EdmError.#ctor(Microsoft.Data.Edm.EdmLocation,Microsoft.Data.Edm.Validation.EdmErrorCode,System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Validation.EdmError" /> class.</summary>
      <param name="errorLocation">The location where the error occurred.</param>
      <param name="errorCode">An integer code representing the error.</param>
      <param name="errorMessage">A human readable message describing the error.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Validation.EdmError.ErrorCode">
      <summary>Gets an integer code representing the error.</summary>
      <returns>The code representing the error.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Validation.EdmError.ErrorLocation">
      <summary>Gets the location of the error in the file in which it occurred.</summary>
      <returns>The location of the error in the file in which it occurred.</returns>
    </member>
    <member name="P:Microsoft.Data.Edm.Validation.EdmError.ErrorMessage">
      <summary>Gets a human readable string describing the error.</summary>
      <returns>A human readable string describing the error.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.EdmError.ToString">
      <summary>Gets a string representation of the error.</summary>
      <returns>A string representation of the error.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.EdmErrorCode">
      <summary>Specifies the EdmLib validation error codes.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidErrorCodeValue">
      <summary>Invalid error code.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.UnexpectedXmlNodeType">
      <summary>Encountered an XML node that was never used.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.UnexpectedXmlAttribute">
      <summary>Encountered an XML attribute that was never used.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.UnexpectedXmlElement">
      <summary>Encountered an XML element that was never used.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.TextNotAllowed">
      <summary>Text was found in a location it was not allowed in.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EmptyFile">
      <summary>An empty file was provided to the parser.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.MissingAttribute">
      <summary>An XML element was missing a required attribute.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidName">
      <summary>Invalid Name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.AlreadyDefined">
      <summary>Element name is already defined in this context.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidVersionNumber">
      <summary>The specified version number is not valid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidBoolean">
      <summary>Malformed Boolean value.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadProperty">
      <summary>The property contains an error.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidPropertyType">
      <summary>The type of this property is invalid for the given context.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.PrecisionOutOfRange">
      <summary>Precision out of range.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ScaleOutOfRange">
      <summary>Scale out of range.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.NameTooLong">
      <summary>Name is too long.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidAssociation">
      <summary>The provided association is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadNavigationProperty">
      <summary>Navigation property contains errors.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidKey">
      <summary>Entity key is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidMultiplicity">
      <summary>Multiplicity value was malformed.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidAction">
      <summary>The value for the Action attribute is invalid or not allowed in the current context.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidOperation">
      <summary>An error occurred processing the On Operation elements.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidEndEntitySet">
      <summary>The extent name used in the EntittyContainerType End does not match the name of any of the EntityContainerProperties in the containing EntityContainer.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidRoleInRelationshipConstraint">
      <summary>Invalid role value in the relationship constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidPropertyInRelationshipConstraint">
      <summary>Invalid Property in relationship constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.TypeMismatchRelationshipConstraint">
      <summary>Type mismatch between ToProperty and FromProperty in the relationship constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidMultiplicityInRoleInRelationshipConstraint">
      <summary>Invalid multiplicity in FromRole in the relationship constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.MismatchNumberOfPropertiesInRelationshipConstraint">
      <summary>The number of properties in the FromProperty and ToProperty in the relationship constraint must be identical.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.SameRoleReferredInReferentialConstraint">
      <summary>Same role referred in the ToRole and FromRole of a referential constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EntityKeyMustBeScalar">
      <summary>Properties that are part of entity key must be of scalar type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EntityKeyMustNotBeBinary">
      <summary>Binary type properties which are part of entity key are currently supported before V2.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EndWithManyMultiplicityCannotHaveOperationsSpecified">
      <summary>End with * multiplicity cannot have operations specified.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EntitySetTypeHasNoKeys">
      <summary>EntitySet type has no keys.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidConcurrencyMode">
      <summary>ConcurrencyMode value was malformed.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ConcurrencyRedefinedOnSubtypeOfEntitySetType">
      <summary>Concurrency can't change for any sub types of an EntitySet type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportUnsupportedReturnType">
      <summary>Function import return type must be either empty, a collection of entities, or a singleton scalar.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ComposableFunctionImportCannotBeSideEffecting">
      <summary>Composable function import cannot be side-effecting.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportReturnsEntitiesButDoesNotSpecifyEntitySet">
      <summary>Function import specifies entity type return but no entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportEntityTypeDoesNotMatchEntitySet">
      <summary>Function import specifies entity type that does not derive from element type of entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportSpecifiesEntitySetButDoesNotReturnEntityType">
      <summary>Function import specifies a binding to an entity set but does not return entities.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.SimilarRelationshipEnd">
      <summary>Same Entity Set Taking part in the same role of the relationship set in two different relationship sets.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.DuplicatePropertySpecifiedInEntityKey">
      <summary>Entity key refers to the same property twice.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.NullableComplexType">
      <summary>Nullable Complex Type not supported in EDM V1.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.KeyMissingOnEntityType">
      <summary>No Key defined on Entity Type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.SystemNamespaceEncountered">
      <summary>Need not specify system namespace in using.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidNamespaceName">
      <summary>Invalid qualification specified for type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EnumMemberValueOutOfRange">
      <summary>The value for an enumeration type member is out of range.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.DuplicateEntityContainerMemberName">
      <summary>The entity container name has already been assigned to a different entity container.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidAbstractComplexType">
      <summary>Complex types were not allowed to be abstract here.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidPolymorphicComplexType">
      <summary>Complex types cannot have base types in this version.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadAmbiguousElementBinding">
      <summary>Name collision makes this name ambiguous.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedType">
      <summary>Could not find a type with this name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedPrimitiveType">
      <summary>Could not find a primitive type with this name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadCyclicComplex">
      <summary>This complex type is part of a cycle.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadCyclicEntityContainer">
      <summary>This Entity Container is bad because some part of its extends hierarchy is part of a cycle.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadCyclicEntity">
      <summary>This entity type is part of a cycle.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.TypeSemanticsCouldNotConvertTypeReference">
      <summary>Could not convert type reference to the requested type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ConstructibleEntitySetTypeInvalidFromEntityTypeRemoval">
      <summary>This entity set became invalid because the entity that it was of the type of was removed from the model.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedEntityContainer">
      <summary>Could not find an EntityContainer with that name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedEntitySet">
      <summary>Could not find an EntitySet with that name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedProperty">
      <summary>Could not find a property with that name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadNonComputableAssociationEnd">
      <summary>Could not find an association end with that name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.NavigationPropertyTypeInvalidBecauseOfBadAssociation">
      <summary>Type of the navigation property was invalid because the association of the navigation property was invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EntityMustHaveEntityBaseType">
      <summary>The base type of an entity must also be an entity.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ComplexTypeMustHaveComplexBaseType">
      <summary>The base type of a complex type must also be complex.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.RowTypeMustNotHaveBaseType">
      <summary>Rows cannot have base types.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.AssociationSetEndRoleMustBelongToSetElementType">
      <summary>The role of an association set end must be an association end belonging to the association type that defines the association set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.KeyPropertyMustBelongToEntity">
      <summary>Every property in an entity key must be a property of the entity.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.ReferentialConstraintPrincipleEndMustBelongToAssociation">
      <summary>The principle end of a referential constraint must be one of the ends of the association that defined the referential constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.DependentPropertiesMustBelongToDependentEntity">
      <summary>Dependent properties of a referential constraint must belong to the dependent entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.DeclaringTypeMustBeCorrect">
      <summary>If a structured type declares a property, that properties declaring type must be the declaring structured type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionsNotSupportedBeforeV2">
      <summary>Functions are not supported before version 2.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.AbstractEntitiesCannotBeInstantiated">
      <summary>Abstract entities cannot be used as the type of an entity set because they cannot be instantiated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidNavigationPropertyType">
      <summary>Navigation property has a type that is not an entity or collection of entities.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.TermTypeIsBadBecauseTermIsBad">
      <summary>Type of term is bad because the term is bad.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FailedToParseExternalAnnotations">
      <summary>Failed to parse external annotations.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.UnderlyingTypeIsBadBecauseEnumTypeIsBad">
      <summary>Underlying type of the enumeration type is bad because the enumeration type is bad.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidAssociationSetEndSetWrongType">
      <summary>The type of the entity set on this association end is inconsistent with the association end.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.OnlyInputParametersAllowedInFunctions">
      <summary>Only function parameters with mode of In are allowed in function imports.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionParameterIncorrectType">
      <summary>Function parameter was of a non-allowed type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionReturnTypeIncorrectType">
      <summary>Function return type was of a non-allowed type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.RowTypeMustHaveProperties">
      <summary>A row type must contain at least one property.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.DuplicateDependentProperty">
      <summary>A referential constraint cannot have multiple dependent properties with the same name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BindableFunctionImportMustHaveParameters">
      <summary>Bindable function import must have at least one parameter.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportSideEffectingNotSupportedBeforeV3">
      <summary>Function imports with side-effecting setting are not supported before version 3.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportComposableNotSupportedBeforeV3">
      <summary>Function imports with composable setting are not supported before version 3.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.FunctionImportBindableNotSupportedBeforeV3">
      <summary>Function imports with bindable setting are not supported before version 3.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.MaxLengthOutOfRange">
      <summary>Max length is out of range.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedValueTerm">
      <summary>Could not find a ValueTerm with that name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.PathExpressionHasNoEntityContext">
      <summary>Binding context for Path expression does not supply an entity type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidSrid">
      <summary>Invalid value for SRID.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidMaxLength">
      <summary>Invalid value for max length.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidLong">
      <summary>Invalid value for long.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidInteger">
      <summary>Invalid value for integer.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidAssociationSet">
      <summary>Invalid association set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidParameterMode">
      <summary>Invalid parameter mode.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.BadUnresolvedEntityType">
      <summary>No entity type with that name exists.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidValue">
      <summary>Value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidBinaryValue">
      <summary>Binary value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidBooleanValue">
      <summary>Boolean value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidDateTimeValue">
      <summary>DateTime value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidDateTimeOffsetValue">
      <summary>DateTimeOffset value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidDecimalValue">
      <summary>Decimal value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidGuidValue">
      <summary>Guid value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidIntegerValue">
      <summary>Integer value is invalid.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.InvalidIfExpressionIncorrectNumberOfOperands">
      <summary>The if expression is invalid because it does not have 3 elements.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EnumsNotSupportedBeforeV3">
      <summary>Enums were present in a model with a version below 3.0.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.EdmErrorCode.EnumMemberTypeMustMatchEnumUnderlyingType">
      <summary>The type of an enum member value must match the underlying of the parent enum.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.EdmValidator">
      <summary>Represents a collection of validation methods.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.EdmValidator.Validate(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.Validation.ValidationRuleSet,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@)">
      <summary>Validates the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and all of its properties given certain version.</summary>
      <returns>True if model is valid, otherwise false.</returns>
      <param name="root">The root of the model to be validated.</param>
      <param name="ruleSet">The custom rule set to validate against.</param>
      <param name="errors">The errors encountered while validating the model.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.EdmValidator.Validate(Microsoft.Data.Edm.IEdmModel,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@)">
      <summary>Validates the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and all of its properties using the current version of the model. If the model has no version, <see cref="T:Microsoft.Data.Edm.IEdmModel" /> is used.</summary>
      <returns>True if model is valid, otherwise false.</returns>
      <param name="root">The root of the model to be validated.</param>
      <param name="errors">The errors encountered while validating the model.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.EdmValidator.Validate(Microsoft.Data.Edm.IEdmModel,System.Version,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.EdmError}@)">
      <summary>Validates the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and all of its properties given certain version.</summary>
      <returns>True if model is valid, otherwise false.</returns>
      <param name="root">The root of the model to be validated.</param>
      <param name="version">The version of EDM to validate against.</param>
      <param name="errors">The errors encountered while validating the model.</param>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.ValidationContext">
      <summary>Specifies a context that records errors reported by validation rules.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationContext.AddError(Microsoft.Data.Edm.EdmLocation,Microsoft.Data.Edm.Validation.EdmErrorCode,System.String)">
      <summary>Adds an error with the validation context.</summary>
      <param name="location">The location of the error.</param>
      <param name="errorCode">The value representing the error.</param>
      <param name="errorMessage">The message text describing the error.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationContext.AddError(Microsoft.Data.Edm.Validation.EdmError)">
      <summary>Adds an error with the validation context.</summary>
      <param name="error">The error to register.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationContext.FindTypeInModel(System.String)">
      <summary>Finds a type from the provided model, or from the set of primitive types.</summary>
      <returns>The requested type if it exists, otherwise null.</returns>
      <param name="qualifiedName">The name of the type being found.</param>
    </member>
    <member name="P:Microsoft.Data.Edm.Validation.ValidationContext.Model">
      <summary>Gets the model being validated.</summary>
      <returns>The model being validated.</returns>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.ValidationRule">
      <summary>Represents a semantic validation rule.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRule.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Validation.ValidationRule" /> class.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.ValidationRule`1">
      <summary>Represents a validation rule that is valid for a specific type.</summary>
      <typeparam name="TItem">The type that the rule is valid for.</typeparam>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRule`1.#ctor(System.Action`2)"></member>
    <member name="T:Microsoft.Data.Edm.Validation.ValidationRules">
      <summary>Specifies a built in EDM validation rules.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.AbstractEntitiesCannotBeInstantiated">
      <summary>Validates that the entity set is not of an abstract type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.AssociationEndInaccessibleEntityType">
      <summary>Validates that an association end does not have an entity type that is inaccessible from the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.AssociationSetEndRoleMustBelongToSetElementType">
      <summary>Validates that the role of an association set end belongs to the association refered to by the association set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.BaseTypeMustBeNull">
      <summary>Validates that a row type does not have a base type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.BaseTypeMustBeSameKindAsDerivedKind">
      <summary>Validates that the base type of a complex type is complex, and the base type of an entity type is an entity.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.BinaryMaxLengthNegative">
      <summary>Validates that the max length of a binary type is not negative.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.BindableFunctionImportMustHaveParameters">
      <summary>Validates that if a function is bindable, it must have parameters.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ComposableFunctionImportCannotBeSideEffecting">
      <summary>Validates that if a function is composable, it is not also side effecting.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ConcurrencyRedefinedOnSubtypeOfEntitySetType">
      <summary>Validates that concurrency is not redefined on the sub type of a type used by an entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.CorrectType">
      <summary>Validates that the type of a navigation property corresponds to the other end of the association and the multiplicity of the other end.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.DependentPropertiesMustBelongToDependentEntity">
      <summary>Validates that all dependent properties of a referential constraint belong to the dependent entity type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.DuplicateDependentProperty">
      <summary>Validates that the dependent properties of a referential constraint contain no duplicates.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.DuplicateEndName">
      <summary>Validates that the association set does not have duplicate ends.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.DuplicateEntityContainerMemberName">
      <summary>Validates that there are no duplicate names in an entity container.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.DuplicatePropertyNameSpecifiedInEntityKey">
      <summary>Validates that there are not duplicate properties in an entity key.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EndNameAlreadyDefinedDuplicate">
      <summary>Validates that there is not duplicate end names in an association.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EndsMustHaveCorrectDeclaringAssociation">
      <summary>Validates that the declaring association of an association end contains the end.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EndWithManyMultiplicityCannotHaveOperationsSpecified">
      <summary>Validates that the association end does not have both a multiplicity of many and an OnDelete operation.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EntityKeyMustBeScalar">
      <summary>Validates that all parts of an entity key are scalar.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EntityKeyMustNotBeBinaryBeforeV2">
      <summary>Validates that no part of an entity key is a binary primitive type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EntityReferenceInaccessibleEntityType">
      <summary>Validates that the entity type wrapped in this entity reference can be found through the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EntitySetMustBeOfCorrectEntityType">
      <summary>Validates that the entity type of the role of an association set end is the same entity type as the entity set that set end points to.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EntitySetTypeHasNoKeys">
      <summary>Validates that there is no entity set whose entity type has no key.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EnumMemberNameAlreadyDefined">
      <summary>Validates that there are not duplicate enum members in an enum.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EnumMemberValueMustHaveSameTypeAsUnderlyingType">
      <summary>Raises an error if the type of an enum member doesn't match the underlying type of the enum it belongs to.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.EnumsNotSupportedBeforeV3">
      <summary>Raises an error if an enum type is found.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportEntityTypeDoesNotMatchEntitySet">
      <summary>Validates that the return type of a function must match the type of the entity set of the function.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportReturnEntitiesButDoesNotSpecifyEntitySet">
      <summary>Validates that if a function import specifies an entity or collection of entities as its return type, it must also specify an entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportSpecifiesEntitySetButDoesNotReturnEntityType">
      <summary>Validates that if a function specifies an entity set, it must return an entity or collection of entities.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportUnsupportedReturnTypeV1">
      <summary>Validates that a function import has an allowed return type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportUnsupportedReturnTypeV1_1">
      <summary>Validates that a function import has an allowed return type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportUnsupportedReturnTypeV2">
      <summary>Validates that a function import has an allowed return type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionImportUnsupportedReturnTypeV3">
      <summary>Validates that a function import has an allowed return type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionReturnTypeIncorrectType">
      <summary>Validates that the return type of the function is allowable.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.FunctionsNotSupportedBeforeV2">
      <summary>Raises an error if a function is found.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InaccessibleAssociation">
      <summary>Validates that the association refered to by an association set can be found from the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InaccessibleBaseType">
      <summary>Validates that the base type of a structured type can be found from the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InaccessibleEntityType">
      <summary>Validates that the entity type of an entity set can be found from the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InaccessibleSchemaType">
      <summary>Validates that a type reference refers to a type that can be found through the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidIsAbstractComplexTypeV1">
      <summary>Validates that a complex type is not abstract.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidIsPolymorphicComplexTypeV1">
      <summary>Validates that a complex type does not inherit.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidKeyKeyDefinedInBaseClass">
      <summary>Validates that a key is not defined if there is already a key in the base type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidKeyNullablePart">
      <summary>Validates that no part of an entity key is nullable.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMemberNameMatchesTypeName">
      <summary>Validates that a type does not have a property with the same name as that type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityFromRoleToPropertyNonNullableV1">
      <summary>Validates that if not all dependent properties are nullable then the multiplicity must be 1.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityFromRoleToPropertyNonNullableV2">
      <summary>Validates that if the dependent properties have no nullable property the multiplicity must be one.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityFromRoleToPropertyNullable">
      <summary>Validates if all dependent properties of a referential constraint are nullable that the multiplicity cannot be 1.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityFromRoleUpperBoundMustBeOne">
      <summary>Validates that the multiplicity of the principle end is not many.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityToRoleUpperBoundMustBeMany">
      <summary>Validates that if the dependent ends entity key is not equivalent to the dependent properties, the multiplicity of the dependent end must be many.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidMultiplicityToRoleUpperBoundMustBeOne">
      <summary>Validates that if the dependent properties are equivalent to the key of the dependent end, the multiplicity of the dependent end cannot be 1.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidOperationMultipleEndsInAssociation">
      <summary>Validates that only one end of an association has an OnDelete operation.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidPropertyType">
      <summary>Validates that the property is of an allowed type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidPropertyTypeConcurrencyMode">
      <summary>Validates that if the concurrency mode of a property is fixed, the type is primitive.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.InvalidToPropertyInRelationshipConstraintBeforeV2">
      <summary>Validates that all dependent properties are a subset of the dependent entity types key.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.IsBindableNotSupportedBeforeV3">
      <summary>Validates that a function is not bindable.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.IsComposableNotSupportedBeforeV3">
      <summary>Validates that a function import is not composable.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.IsSideEffectingNotSupportedBeforeV3">
      <summary>Validates that a function import is not side effecting.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.KeyMissingOnEntityType">
      <summary>Validates that the entity type has a key.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.KeyPropertyMustBelongToEntity">
      <summary>Validates that all properties in the key of an entity belong to that entity.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.MustContainProperties">
      <summary>Validates that a row type contains at least one property.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NameIsNotAllowed">
      <summary>Validates that an element name matches the allowed pattern of names according to the CSDL spec.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NameIsTooLong">
      <summary>Validates that an element name is not too long according to the CSDL spec.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NameMustNotBeEmptyOrWhiteSpace">
      <summary>Validates that a name is not empty or whitespace.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NamespaceIsNotAllowed">
      <summary>Validates that an element namespace matches the allowed pattern of namespaces according to the CSDL spec.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NamespaceIsTooLong">
      <summary>Validates that an element namespace is not too long according to the CSDL spec.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NamespaceMustNotBeEmptyOrWhiteSpace">
      <summary>Validates that an element namespace is not empty or whitespace.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NavigationPropertyInaccessibleAssociation">
      <summary>Validates that the association of a navigation property can be found through the model being validated.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.NullableComplexType">
      <summary>Validates that any property with a complex type is not nullable.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.OnlyInputParametersAllowedInFunctions">
      <summary>Validates that no function parameters are output parameters.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ParameterNameAlreadyDefinedDuplicate">
      <summary>Validates that a function does not have multiple parameters with the same name.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ParametersIncorrectType">
      <summary>Validates that the parameters of a function have a correct type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ParametersIncorrectTypeBeforeV3">
      <summary>Validates that the type of a function imports parameter is correct.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.PropertiesDeclaringTypeMustBeCorrect">
      <summary>Validates that the declaring type of a property contains that property.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.PropertyNameAlreadyDefined">
      <summary>Validates that there are not duplicate properties in a type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ReferentialConstraintPrincipleEndMustBelongToAssociation">
      <summary>Validates that the principal end of a referential constraint is one of the ends of the association that declares the referential constraint.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.ScaleOutOfRange">
      <summary>Validates that the scale is between 0 and the precision of the decimal type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.SimilarRelationshipEnd">
      <summary>Validates that there are no association sets that refer to both the same association and the same entity set.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.StringMaxLengthNegative">
      <summary>Validates that the max length of a string is not negative.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.SystemNamespaceEncountered">
      <summary>Validates that an element namespace is not a reserved system namespace.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.TypeMismatchRelationshipConstraint">
      <summary>Validates that each pair of properties between the dependent properties and the principle ends key are of the same type.</summary>
    </member>
    <member name="F:Microsoft.Data.Edm.Validation.ValidationRules.TypeNameAlreadyDefined">
      <summary>Validates that there are no duplicate type names in a model.</summary>
    </member>
    <member name="T:Microsoft.Data.Edm.Validation.ValidationRuleSet">
      <summary>Provides a set of rules to run during validation.</summary>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRuleSet.#ctor(Microsoft.Data.Edm.Validation.ValidationRuleSet,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.ValidationRule})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Validation.ValidationRuleSet" /> class.</summary>
      <param name="baseSet">The ruleset whose rules should be contained in this set.</param>
      <param name="newRules">The additional rules to add to the set.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRuleSet.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Validation.ValidationRule})">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Data.Edm.Validation.ValidationRuleSet" /> class.</summary>
      <param name="rules">The rules to be contained in this ruleset.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRuleSet.GetEdmModelRuleSet(System.Version)">
      <summary>Gets the default validation ruleset for the given version.</summary>
      <returns>The set of rules to validate that the model conforms to the given version.</returns>
      <param name="version">The EDM version being validated.</param>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRuleSet.GetEnumerator">
      <summary>Gets all of the rules in this ruleset.</summary>
      <returns>All of the rules in this ruleset.</returns>
    </member>
    <member name="M:Microsoft.Data.Edm.Validation.ValidationRuleSet.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets all of the rules in this ruleset. </summary>
      <returns>All of the rules in this ruleset.</returns>
    </member>
  </members>
</doc>